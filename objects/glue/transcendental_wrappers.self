" This information was generated by the primitive maker (primitiveMaker.self).
Please do not change it manually. -- dmu 12/91  "

" Copyright 1992-2012 AUTHORS.  "

" See the LICENSE file for license information.  "

traits number _AddSlots: ( |

{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: transcendental_wrappers InitialContents: FollowSlot'

	}
{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: transcendental_wrappers InitialContents: FollowSlot\x7fVisibility: public'

  sin = (

       sinIfFail: [|:e| ^error: 'sin failed: ', e] ).

  sinIfFail: fb = (
    |

    |

       _sinIfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  self asFloat _sinIfFail: fb 
           ]] ).


  cos = (

       cosIfFail: [|:e| ^error: 'cos failed: ', e] ).

  cosIfFail: fb = (
    |

    |

       _cosIfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  self asFloat _cosIfFail: fb 
           ]] ).


  tan = (

       tanIfFail: [|:e| ^error: 'tan failed: ', e] ).

  tanIfFail: fb = (
    |

    |

       _tanIfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  self asFloat _tanIfFail: fb 
           ]] ).


  arcSin = (

       arcSinIfFail: [|:e| ^error: 'arcSin failed: ', e] ).

  arcSinIfFail: fb = (
    |

    |

       _asinarcSinIfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  self asFloat _asinarcSinIfFail: fb 
           ]] ).


  arcCos = (

       arcCosIfFail: [|:e| ^error: 'arcCos failed: ', e] ).

  arcCosIfFail: fb = (
    |

    |

       _acosarcCosIfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  self asFloat _acosarcCosIfFail: fb 
           ]] ).


  arcTan = (

       arcTanIfFail: [|:e| ^error: 'arcTan failed: ', e] ).

  arcTanIfFail: fb = (
    |

    |

       _atanarcTanIfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  self asFloat _atanarcTanIfFail: fb 
           ]] ).


  arcTan: t0  = (

       arcTan: t0 IfFail: [|:e| ^error: 'arcTan: failed: ', e] ).

  arcTan: t0 IfFail: fb = (
    |

    |

       _atan2arcTan: t0 IfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  self asFloat _atan2arcTan: t0 asFloat IfFail: fb 
           ]] ).


  sinh = (

       sinhIfFail: [|:e| ^error: 'sinh failed: ', e] ).

  sinhIfFail: fb = (
    |

    |

       _sinhIfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  self asFloat _sinhIfFail: fb 
           ]] ).


  cosh = (

       coshIfFail: [|:e| ^error: 'cosh failed: ', e] ).

  coshIfFail: fb = (
    |

    |

       _coshIfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  self asFloat _coshIfFail: fb 
           ]] ).


  tanh = (

       tanhIfFail: [|:e| ^error: 'tanh failed: ', e] ).

  tanhIfFail: fb = (
    |

    |

       _tanhIfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  self asFloat _tanhIfFail: fb 
           ]] ).


  arcSinh = (

       arcSinhIfFail: [|:e| ^error: 'arcSinh failed: ', e] ).

  arcSinhIfFail: fb = (
    |

    |

       _asinharcSinhIfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  self asFloat _asinharcSinhIfFail: fb 
           ]] ).


  arcCosh = (

       arcCoshIfFail: [|:e| ^error: 'arcCosh failed: ', e] ).

  arcCoshIfFail: fb = (
    |

    |

       _acosharcCoshIfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  self asFloat _acosharcCoshIfFail: fb 
           ]] ).


  arcTanh = (

       arcTanhIfFail: [|:e| ^error: 'arcTanh failed: ', e] ).

  arcTanhIfFail: fb = (
    |

    |

       _atanharcTanhIfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  self asFloat _atanharcTanhIfFail: fb 
           ]] ).


  squareRoot = (

       squareRootIfFail: [|:e| ^error: 'squareRoot failed: ', e] ).

  squareRootIfFail: fb = (
    |

    |

       _sqrtsquareRootIfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  self asFloat _sqrtsquareRootIfFail: fb 
           ]] ).


  raisedTo: t0  = (

       raisedTo: t0 IfFail: [|:e| ^error: 'raisedTo: failed: ', e] ).

  raisedTo: t0 IfFail: fb = (
    |

    |

       _powraisedTo: t0 IfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  self asFloat _powraisedTo: t0 asFloat IfFail: fb 
           ]] ).


  exp = (

       expIfFail: [|:e| ^error: 'exp failed: ', e] ).

  expIfFail: fb = (
    |

    |

       _expIfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  self asFloat _expIfFail: fb 
           ]] ).


  naturalLog = (

       naturalLogIfFail: [|:e| ^error: 'naturalLog failed: ', e] ).

  naturalLogIfFail: fb = (
    |

    |

       _lognaturalLogIfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  self asFloat _lognaturalLogIfFail: fb 
           ]] ).


  base10Log = (

       base10LogIfFail: [|:e| ^error: 'base10Log failed: ', e] ).

  base10LogIfFail: fb = (
    |

    |

       _log10base10LogIfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  self asFloat _log10base10LogIfFail: fb 
           ]] ).


  base2Log = (

       base2LogIfFail: [|:e| ^error: 'base2Log failed: ', e] ).

  base2LogIfFail: fb = (
    |

    |

       _log2base2LogIfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  self asFloat _log2base2LogIfFail: fb 
           ]] ).


	}
| )

modules _AddSlots: ( |
	{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: transcendental_wrappers InitialContents: FollowSlot\x7fVisibility: public'

		transcendental_wrappers = ()
	}
| )

modules transcendental_wrappers _AddSlots: (
	bootstrap remove: 'directory' From:
	bootstrap remove: 'fileInTimeString' From:
	bootstrap remove: 'myComment' From:
	bootstrap remove: 'postFileIn' From:
	bootstrap remove: 'revision' From:
	bootstrap remove: 'subpartNames' From:
	globals modules init copy) _AddSlots: ( |
	{} = 'Comment: This information was generated by the primitive maker (primitiveMaker.self).
Please do not change it manually. -- dmu 12/91 \x7fModuleInfo: Creator: globals modules transcendental_wrappers.

CopyDowns:
globals modules init. copy 
SlotsToOmit: directory fileInTimeString myComment postFileIn revision subpartNames.

\x7fIsComplete: '.

	{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: transcendental_wrappers InitialContents: InitializeToExpression: (_CurrentTimeString)\x7fVisibility: public'

		fileInTimeString <- _CurrentTimeString.
	}
	{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: transcendental_wrappers InitialContents: FollowSlot'

		myComment <- '
		This information was generated by the primitive maker (primitiveMaker.self).
Please do not change it manually. -- dmu 12/91 .'.
	}
	{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: transcendental_wrappers InitialContents: FollowSlot\x7fVisibility: public'

		directory <- 'glue'.
	}
	{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: transcendental_wrappers InitialContents: FollowSlot\x7fVisibility: public'

		revision <- 'No revision; generated file'.
	}
	{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: transcendental_wrappers InitialContents: FollowSlot\x7fVisibility: private'

		subpartNames <- ''.
	}
| )



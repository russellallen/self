/* This information was generated by the primitive maker (primitiveMaker.self).
Please do not change it manually. -- dmu 12/91  */\
\
# ifdef INTERFACE_PRAGMAS
# pragma interface
# endif
# undef PRIMITIVE_GLUE_FLAG_CODE
# define PRIMITIVE_GLUE_FLAG_CODE BlockGlueFlag gf(xlib_semaphore);
/* Copyright 1992-2012 AUTHORS.  */\
\
/* See the LICENSE file for license information.  */\
\
# define xlib_entries \
\
/* display  */\
\
{ "XDisplayNamexDisplayName", \
fntype(&XDisplayName_XDisplayName__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "DefaultScreendefaultScreen", \
fntype(&DefaultScreen_DefaultScreen_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "DefaultScreenOfDisplaydefaultScreenOfDisplayResultProxy:", \
fntype(&DefaultScreenOfDisplay_DefaultScreenOfDisplay_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "ConnectionNumberconnectionNumber", \
fntype(&ConnectionNumber_ConnectionNumber_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
/* vendor info  */\
\
{ "XServerVendorxServerVendor", \
fntype(&XServerVendor_XServerVendor_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XVendorReleasexVendorRelease", \
fntype(&XVendorRelease_XVendorRelease_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
/* visual info  */\
\
{ "XMatchVisualInfo_wrapxMatchVisualInfoScreen:Depth:Class:ResultProxy:", \
fntype(&XMatchVisualInfo_wrap_XMatchVisualInfoScreen_Depth_Class__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
/* event handling  */\
\
{ "XEventsQueuedxEventsQueued:", \
fntype(&XEventsQueued_XEventsQueued__glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XPendingxPending", \
fntype(&XPending_XPending_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XNextEventxNextEventInto:", \
fntype(&XNextEvent_XNextEventInto__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XPeekEventxPeekEventInto:", \
fntype(&XPeekEvent_XPeekEventInto__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XPutBackEventxPutBackEvent:", \
fntype(&XPutBackEvent_XPutBackEvent__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XCheckTypedEventxCheckType:OfEvent:", \
fntype(&XCheckTypedEvent_XCheckType_OfEvent__glue), \
ExternalPrimitive, \
BooleanPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XCheckMaskEventxCheckMask:OfEvent:", \
fntype(&XCheckMaskEvent_XCheckMask_OfEvent__glue), \
ExternalPrimitive, \
BooleanPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XNextEvent_wrapxNextEventPeek:Protos:", \
fntype(&XNextEvent_wrap_XNextEventPeek_Protos__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
/* synchronization  */\
\
{ "XFlushxFlush", \
fntype(&XFlush_XFlush_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSynchronizexSynchronize:", \
fntype(&XSynchronize_XSynchronize__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSyncxSyncDiscardingIf:", \
fntype(&XSync_XSyncDiscardingIf__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
/* beeping  */\
\
{ "XBellxBell:", \
fntype(&XBell_XBell__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
/* gc  */\
\
{ "XChangeGCxChangeGC:ValueMask:Values:", \
fntype(&XChangeGC_XChangeGC_ValueMask_Values__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XCreateGCxCreateGCDrawable:ValueMask:Values:ResultProxy:", \
fntype(&XCreateGC_XCreateGCDrawable_ValueMask_Values__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XFreeGCxFreeGC:", \
fntype(&XFreeGC_XFreeGC__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XGetGCValues_wrapxGetGCValuesGC:ValueMask:Values:", \
fntype(&XGetGCValues_wrap_XGetGCValuesGC_ValueMask_Values__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetForegroundxSetGC:Foreground:", \
fntype(&XSetForeground_XSetGC_Foreground__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetBackgroundxSetGC:Background:", \
fntype(&XSetBackground_XSetGC_Background__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetFunctionxSetGC:Function:", \
fntype(&XSetFunction_XSetGC_Function__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetPlaneMaskxSetGC:PlaneMask:", \
fntype(&XSetPlaneMask_XSetGC_PlaneMask__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetLineAttributesxSetGC:LineAttributesWidth:LineStyle:CapStyle:JoinStyle:", \
fntype(&XSetLineAttributes_XSetGC_LineAttributesWidth_LineStyle_CapStyle_JoinStyle__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetDashesxSetGC:DashesOffset:DashList:", \
fntype(&XSetDashes_XSetGC_DashesOffset_DashList__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetFontxSetGC:Font:", \
fntype(&XSetFont_XSetGC_Font__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetGraphicsExposuresxSetGC:GraphicsExposures:", \
fntype(&XSetGraphicsExposures_XSetGC_GraphicsExposures__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetFillStylexSetGC:FillStyle:", \
fntype(&XSetFillStyle_XSetGC_FillStyle__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetFillRulexSetGC:FillRule:", \
fntype(&XSetFillRule_XSetGC_FillRule__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetStipplexSetGC:Stipple:", \
fntype(&XSetStipple_XSetGC_Stipple__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetSubwindowModexSetGC:SubwindowMode:", \
fntype(&XSetSubwindowMode_XSetGC_SubwindowMode__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetTilexSetGC:Tile:", \
fntype(&XSetTile_XSetGC_Tile__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetClipOriginxSetClipOrigin:X:Y:", \
fntype(&XSetClipOrigin_XSetClipOrigin_X_Y__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetClipMaskxSetClipMask:Pixmap:", \
fntype(&XSetClipMask_XSetClipMask_Pixmap__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetClipRectangle_wrapxSetClipRectangle:X:Y:Width:Height:", \
fntype(&XSetClipRectangle_wrap_XSetClipRectangle_X_Y_Width_Height__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XQueryBestStippleWidthxQueryBestStippleWidth:Width:Height:", \
fntype(&XQueryBestStippleWidth_XQueryBestStippleWidth_Width_Height__glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XQueryBestStippleHeightxQueryBestStippleHeight:Width:Height:", \
fntype(&XQueryBestStippleHeight_XQueryBestStippleHeight_Width_Height__glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XQueryBestTileWidthxQueryBestTileWidth:Width:Height:", \
fntype(&XQueryBestTileWidth_XQueryBestTileWidth_Width_Height__glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XQueryBestTileHeightxQueryBestTileHeight:Width:Height:", \
fntype(&XQueryBestTileHeight_XQueryBestTileHeight_Width_Height__glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XTranslateCoordinates_wrapxTranslateCoordinatesSrcWindow:DstWindow:Coordinates:ResultProxy:", \
fntype(&XTranslateCoordinates_wrap_XTranslateCoordinatesSrcWindow_DstWindow_Coordinates__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
/* atom  */\
\
{ "XInternAtomxInternAtom:OnlyIfExists:ResultProxy:", \
fntype(&XInternAtom_XInternAtom_OnlyIfExists__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
/* window  */\
\
{ "XCreateIOWindow_wrapxCreateIOWindowIn:X:Y:Width:Height:Depth:Visual:Attributes:ResultProxy:", \
fntype(&XCreateIOWindow_wrap_XCreateIOWindowIn_X_Y_Width_Height_Depth_Visual_Attributes__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XCreateSimpleWindowxCreateSimpleWindowIn:X:Y:Width:Height:BorderWidth:Border:Background:ResultProxy:", \
fntype(&XCreateSimpleWindow_XCreateSimpleWindowIn_X_Y_Width_Height_BorderWidth_Border_Background__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XChangeWindowAttributes_wrapxChangeWindowAttributesIn:Attributes:", \
fntype(&XChangeWindowAttributes_wrap_XChangeWindowAttributesIn_Attributes__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XGetWindowAttributes_wrapxGetWindowAttributesIn:ResultProxy:", \
fntype(&XGetWindowAttributes_wrap_XGetWindowAttributesIn__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSendEventxSendEventToWindow:Propogate:EventMask:Event:", \
fntype(&XSendEvent_XSendEventToWindow_Propogate_EventMask_Event__glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetWMProtocol_wrapxSetWMProtocolOfWindow:Protocol:", \
fntype(&XSetWMProtocol_wrap_XSetWMProtocolOfWindow_Protocol__glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetWMNamexSetWMNameOfWindow:To:", \
fntype(&XSetWMName_XSetWMNameOfWindow_To__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetWMIconNamexSetWMIconNameOfWindow:To:", \
fntype(&XSetWMIconName_XSetWMIconNameOfWindow_To__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetWMHintsxSetWMHintsOfWindow:To:", \
fntype(&XSetWMHints_XSetWMHintsOfWindow_To__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetWMNormalHintsxSetWMNormalHintsOfWindow:To:", \
fntype(&XSetWMNormalHints_XSetWMNormalHintsOfWindow_To__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSelectInputxSelectInputOfWindow:EventMask:", \
fntype(&XSelectInput_XSelectInputOfWindow_EventMask__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XMapWindowxMapWindow:", \
fntype(&XMapWindow_XMapWindow__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XRaiseWindowxRaiseWindow:", \
fntype(&XRaiseWindow_XRaiseWindow__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XLowerWindowxLowerWindow:", \
fntype(&XLowerWindow_XLowerWindow__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XMoveWindowxMoveWindow:X:Y:", \
fntype(&XMoveWindow_XMoveWindow_X_Y__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XMoveWindowBy_wrapxMoveWindowBy:X:Y:", \
fntype(&XMoveWindowBy_wrap_XMoveWindowBy_X_Y__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XMoveWindowBy_wrapxMoveWindow:ByX:Y:", \
fntype(&XMoveWindowBy_wrap_XMoveWindow_ByX_Y__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XMoveResizeWindowxMoveResizeWindow:X:Y:W:H:", \
fntype(&XMoveResizeWindow_XMoveResizeWindow_X_Y_W_H__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetInputFocusxSetInputFocusWindow:RevertTo:Time:", \
fntype(&XSetInputFocus_XSetInputFocusWindow_RevertTo_Time__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XUnmapWindowxUnmapWindow:", \
fntype(&XUnmapWindow_XUnmapWindow__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XDestroyWindowxDestroyWindow:", \
fntype(&XDestroyWindow_XDestroyWindow__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
/* subwindows  */\
\
{ "XCirculateSubwindowsxCirculateSubwindows:Direction:", \
fntype(&XCirculateSubwindows_XCirculateSubwindows_Direction__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XCirculateSubwindowsDownxCirculateSubwindowsDown:", \
fntype(&XCirculateSubwindowsDown_XCirculateSubwindowsDown__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XCirculateSubwindowsUpxCirculateSubwindowsUp:", \
fntype(&XCirculateSubwindowsUp_XCirculateSubwindowsUp__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XMapSubwindowsxMapSubwindows:", \
fntype(&XMapSubwindows_XMapSubwindows__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XUnmapSubwindowsxUnmapSubwindows:", \
fntype(&XUnmapSubwindows_XUnmapSubwindows__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XDestroySubwindowsxDestroySubwindows:", \
fntype(&XDestroySubwindows_XDestroySubwindows__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
/* cursor  */\
\
{ "XWarpPointerxWarpPointerSrcWindow:DestWindow:SrcX:SrcY:SrcWidth:SrcHeight:DestX:DestY:", \
fntype(&XWarpPointer_XWarpPointerSrcWindow_DestWindow_SrcX_SrcY_SrcWidth_SrcHeight_DestX_DestY__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XGrabPointerxGrabPointerWindow:OwnerEvents:EventMask:PointerMode:KeyboardMode:ConfineTo:Cursor:Time:", \
fntype(&XGrabPointer_XGrabPointerWindow_OwnerEvents_EventMask_PointerMode_KeyboardMode_ConfineTo_Cursor_Time__glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XUngrabPointerxUngrabPointerTime:", \
fntype(&XUngrabPointer_XUngrabPointerTime__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XUngrabButtonxUngrabButton:Modifiers:Window:", \
fntype(&XUngrabButton_XUngrabButton_Modifiers_Window__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XDefineCursorxDefineCursorWindow:Cursor:", \
fntype(&XDefineCursor_XDefineCursorWindow_Cursor__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XUndefineCursorxUndefineCursorWindow:", \
fntype(&XUndefineCursor_XUndefineCursorWindow__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XCreatePixmapCursorxCreatePixmapCursorSource:Mask:ForegroundColor:BackgroundColor:X:Y:ResultProxy:", \
fntype(&XCreatePixmapCursor_XCreatePixmapCursorSource_Mask_ForegroundColor_BackgroundColor_X_Y__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XFreeCursorxFreeCursor:", \
fntype(&XFreeCursor_XFreeCursor__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XCreateFontCursorxCreateFontCursorType:ResultProxy:", \
fntype(&XCreateFontCursor_XCreateFontCursorType__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
/* colormap  */\
\
{ "XCreateColormapxCreateColormapWindow:Visual:Allocate:ResultProxy:", \
fntype(&XCreateColormap_XCreateColormapWindow_Visual_Allocate__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XFreeColormapxFreeColormap:", \
fntype(&XFreeColormap_XFreeColormap__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetWindowColormapxSetWindow:Colormap:", \
fntype(&XSetWindowColormap_XSetWindow_Colormap__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XQueryColors_wrapxQueryColorsInColormap:Colors:", \
fntype(&XQueryColors_wrap_XQueryColorsInColormap_Colors__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XStoreColors_wrapxStoreColorsInColormap:Colors:", \
fntype(&XStoreColors_wrap_XStoreColorsInColormap_Colors__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XQueryColorxQueryColorInColormap:Color:", \
fntype(&XQueryColor_XQueryColorInColormap_Color__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XStoreColorxStoreColorInColormap:Color:", \
fntype(&XStoreColor_XStoreColorInColormap_Color__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XAllocColorxAllocColorInColormap:Color:", \
fntype(&XAllocColor_XAllocColorInColormap_Color__glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XAllocColorCells_wrapxAllocColorCellsInColormap:Contig:PlaneMasksReturn:PixelsReturn:", \
fntype(&XAllocColorCells_wrap_XAllocColorCellsInColormap_Contig_PlaneMasksReturn_PixelsReturn__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XFreeColorCells_wrapxFreeColorCellsInColormap:Pixels:Planes:", \
fntype(&XFreeColorCells_wrap_XFreeColorCellsInColormap_Pixels_Planes__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
/* pixmap  */\
\
{ "XCreateBitmapFromDataxCreateBitmapDrawable:Data:Width:Height:ResultProxy:", \
fntype(&XCreateBitmapFromData_XCreateBitmapDrawable_Data_Width_Height__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XCreatePixmapxCreatePixmap:Width:Height:Depth:ResultProxy:", \
fntype(&XCreatePixmap_XCreatePixmap_Width_Height_Depth__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XFreePixmapxFreePixmap:", \
fntype(&XFreePixmap_XFreePixmap__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
/* shapes  */\
\
{ "XShapeQueryExtension_wrapxShapeQueryExtension", \
fntype(&XShapeQueryExtension_wrap_XShapeQueryExtension_glue), \
ExternalPrimitive, \
BooleanPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XShapeCombineRegion_wrapxShapeCombineRegion:DestKind:X:Y:Region:Operation:", \
fntype(&XShapeCombineRegion_wrap_XShapeCombineRegion_DestKind_X_Y_Region_Operation__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XShapeCombineMask_wrapxShapeCombineMask:DestKind:X:Y:Mask:Operation:", \
fntype(&XShapeCombineMask_wrap_XShapeCombineMask_DestKind_X_Y_Mask_Operation__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XShapeCombineShape_wrapxShapeCombineShape:DestKind:X:Y:Shape:ShapeKind:Operation:", \
fntype(&XShapeCombineShape_wrap_XShapeCombineShape_DestKind_X_Y_Shape_ShapeKind_Operation__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XShapeCombineRectangle_wrapxShapeCombineRectangle:DestKind:X:Y:Width:Height:Operation:", \
fntype(&XShapeCombineRectangle_wrap_XShapeCombineRectangle_DestKind_X_Y_Width_Height_Operation__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
/* drawing  */\
\
{ "XClearAreaxClearAreaIn:X:Y:Width:Height:Exposures:", \
fntype(&XClearArea_XClearAreaIn_X_Y_Width_Height_Exposures__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XCopyAreaxCopyAreaSrc:Dest:GC:SrcX:SrcY:Width:Height:DestX:DestY:", \
fntype(&XCopyArea_XCopyAreaSrc_Dest_GC_SrcX_SrcY_Width_Height_DestX_DestY__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XDrawPointxDrawPoint:GC:X:Y:", \
fntype(&XDrawPoint_XDrawPoint_GC_X_Y__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XDrawLinexDrawLine:GC:X1:Y1:X2:Y2:", \
fntype(&XDrawLine_XDrawLine_GC_X1_Y1_X2_Y2__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XDrawLines_wrapxDrawLines:GC:Xs:Ys:Mode:", \
fntype(&XDrawLines_wrap_XDrawLines_GC_Xs_Ys_Mode__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XDrawRectanglexDrawRectangle:GC:X:Y:Width:Height:", \
fntype(&XDrawRectangle_XDrawRectangle_GC_X_Y_Width_Height__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XFillRectanglexFillRectangle:GC:X:Y:Width:Height:", \
fntype(&XFillRectangle_XFillRectangle_GC_X_Y_Width_Height__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XFillPolygon_wrapxFillPolygon:GC:Xs:Ys:Shape:Mode:", \
fntype(&XFillPolygon_wrap_XFillPolygon_GC_Xs_Ys_Shape_Mode__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XDrawArcxDrawArc:GC:X:Y:Width:Height:StartAngle:EndAngle:", \
fntype(&XDrawArc_XDrawArc_GC_X_Y_Width_Height_StartAngle_EndAngle__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XFillArcxFillArc:GC:X:Y:Width:Height:StartAngle:EndAngle:", \
fntype(&XFillArc_XFillArc_GC_X_Y_Width_Height_StartAngle_EndAngle__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XDrawStringxDrawString:GC:X:Y:String:", \
fntype(&XDrawString_XDrawString_GC_X_Y_String__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XDrawString16_wrapxDrawString16:GC:X:Y:StringVector:", \
fntype(&XDrawString16_wrap_XDrawString16_GC_X_Y_StringVector__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
/* font  */\
\
{ "XQueryFontxQueryFont:ResultProxy:", \
fntype(&XQueryFont_XQueryFont__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XLoadQueryFont_wrapxLoadQueryFont:ResultProxy:", \
fntype(&XLoadQueryFont_wrap_XLoadQueryFont__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XFreeFontxFreeFont:", \
fntype(&XFreeFont_XFreeFont__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
/* image  */\
\
{ "XCreateImage_wrapxCreateImage:Depth:Format:Width:Height:BitmapPad:ResultProxy:", \
fntype(&XCreateImage_wrap_XCreateImage_Depth_Format_Width_Height_BitmapPad__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XGetImagexGetImage:X:Y:Width:Height:PlaneMask:Format:ResultProxy:", \
fntype(&XGetImage_XGetImage_X_Y_Width_Height_PlaneMask_Format__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XPutImagexPutImage:GC:Image:SrcX:SrcY:DestX:DestY:Width:Height:", \
fntype(&XPutImage_XPutImage_GC_Image_SrcX_SrcY_DestX_DestY_Width_Height__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XGetSubImagexGetSubImage:X:Y:Width:Height:PlaneMask:Format:DestImage:DestX:DestY:ResultProxy:", \
fntype(&XGetSubImage_XGetSubImage_X_Y_Width_Height_PlaneMask_Format_DestImage_DestX_DestY__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
/* cut and paste buffers  */\
\
{ "XStoreBytes_wrapxStoreBytes:", \
fntype(&XStoreBytes_wrap_XStoreBytes__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XFetchBytes_wrapxFetchBytes", \
fntype(&XFetchBytes_wrap_XFetchBytes_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "NULLnullWindowResultProxy", \
fntype(&NULL_NullWindow_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "MYSELFwindowDescriptor", \
fntype(&MYSELF_WindowDescriptor_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "NULLnullPixmapResultProxy", \
fntype(&NULL_NullPixmap_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "NULLnullRegionResultProxy", \
fntype(&NULL_NullRegion_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XCreateRegion_wrapxCreateRegionResultProxy", \
fntype(&XCreateRegion_wrap_XCreateRegion_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XDestroyRegion_wrapxDestroyRegion", \
fntype(&XDestroyRegion_wrap_XDestroyRegion_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XEmptyRegion_wrapxEmptyRegion", \
fntype(&XEmptyRegion_wrap_XEmptyRegion_glue), \
ExternalPrimitive, \
BooleanPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XEqualRegion_wrapxEqualRegion:", \
fntype(&XEqualRegion_wrap_XEqualRegion__glue), \
ExternalPrimitive, \
BooleanPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XUnionRegion_wrapxUnionRegion:Region:", \
fntype(&XUnionRegion_wrap_XUnionRegion_Region__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XUnionRectWithRegion_wrapxUnionRectWithRegion:X:Y:Width:Height:", \
fntype(&XUnionRectWithRegion_wrap_XUnionRectWithRegion_X_Y_Width_Height__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XIntersectRegion_wrapxIntersectRegion:Region:", \
fntype(&XIntersectRegion_wrap_XIntersectRegion_Region__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XXorRegion_wrapxXorRegion:Region:", \
fntype(&XXorRegion_wrap_XXorRegion_Region__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSubtractRegion_wrapxSubtractRegion:Region:", \
fntype(&XSubtractRegion_wrap_XSubtractRegion_Region__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XOffsetRegion_wrapxOffsetX:Y:", \
fntype(&XOffsetRegion_wrap_XOffsetX_Y__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "NULLnullCursorResultProxy", \
fntype(&NULL_NullCursor_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "RootWindowOfScreenrootWindowOfScreenResultProxy:", \
fntype(&RootWindowOfScreen_RootWindowOfScreen_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "DefaultVisualOfScreendefaultVisualOfScreenResultProxy:", \
fntype(&DefaultVisualOfScreen_DefaultVisualOfScreen_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "DefaultGCOfScreendefaultGCOfScreenResultProxy:", \
fntype(&DefaultGCOfScreen_DefaultGCOfScreen_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "DefaultColormapOfScreendefaultColormapOfScreenResultProxy:", \
fntype(&DefaultColormapOfScreen_DefaultColormapOfScreen_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "BlackPixelOfScreenblackPixelOfScreen", \
fntype(&BlackPixelOfScreen_BlackPixelOfScreen_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "WhitePixelOfScreenwhitePixelOfScreen", \
fntype(&WhitePixelOfScreen_WhitePixelOfScreen_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "WidthOfScreenwidthOfScreen", \
fntype(&WidthOfScreen_WidthOfScreen_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "WidthMMOfScreenwidthMMOfScreen", \
fntype(&WidthMMOfScreen_WidthMMOfScreen_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "HeightOfScreenheightOfScreen", \
fntype(&HeightOfScreen_HeightOfScreen_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "DefaultDepthOfScreendefaultDepthOfScreen", \
fntype(&DefaultDepthOfScreen_DefaultDepthOfScreen_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XScreenNumberOfScreenxScreenNumberOfScreen", \
fntype(&XScreenNumberOfScreen_XScreenNumberOfScreen_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XVisualInfo_newnewResultProxy", \
fntype(&XVisualInfo_new_New_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XVisualInfo_deletedelete", \
fntype(&XVisualInfo_delete_Delete_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XVisualInfo_visualvisualResultProxy:", \
fntype(&XVisualInfo_visual_Visual_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XVisualInfo_visualidvisualID", \
fntype(&XVisualInfo_visualid_VisualID_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XVisualInfo_visualidvisualID:", \
fntype(&XVisualInfo_visualid_VisualID__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XVisualInfo_screenscreen", \
fntype(&XVisualInfo_screen_Screen_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XVisualInfo_depthdepth", \
fntype(&XVisualInfo_depth_Depth_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XVisualInfo_depthdepth:", \
fntype(&XVisualInfo_depth_Depth__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XVisualInfo_c_classclass", \
fntype(&XVisualInfo_c_class_Class_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XVisualInfo_red_maskred_mask", \
fntype(&XVisualInfo_red_mask_Red_mask_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XVisualInfo_green_maskgreen_mask", \
fntype(&XVisualInfo_green_mask_Green_mask_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XVisualInfo_blue_maskblue_mask", \
fntype(&XVisualInfo_blue_mask_Blue_mask_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XVisualInfo_colormap_sizecmap_size", \
fntype(&XVisualInfo_colormap_size_Cmap_size_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XVisualInfo_bits_per_rgbbits_per_rgb", \
fntype(&XVisualInfo_bits_per_rgb_Bits_per_rgb_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XTextWidthxTextWidth:", \
fntype(&XTextWidth_XTextWidth__glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XFontStruct_fidfidResultProxy:", \
fntype(&XFontStruct_fid_Fid_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XFontStruct_ascentascent", \
fntype(&XFontStruct_ascent_Ascent_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XFontStruct_descentdescent", \
fntype(&XFontStruct_descent_Descent_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XFontStruct_max_char_or_byte2max_char_or_byte2", \
fntype(&XFontStruct_max_char_or_byte2_Max_char_or_byte2_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XFontStruct_min_char_or_byte2min_char_or_byte2", \
fntype(&XFontStruct_min_char_or_byte2_Min_char_or_byte2_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XFontStruct_per_charper_char", \
fntype(&XFontStruct_per_char_Per_char_glue), \
ExternalPrimitive, \
BooleanPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "maxCharWidth", \
fntype(&maxCharWidth_MaxCharWidth_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "maxAscent", \
fntype(&maxAscent_MaxAscent_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "maxDescent", \
fntype(&maxDescent_MaxDescent_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "perCharWidth:", \
fntype(&perCharWidth_PerCharWidth__glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XVisualIDFromVisualxVisualIDFromVisual", \
fntype(&XVisualIDFromVisual_XVisualIDFromVisual_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XCharStruct_widthwidth", \
fntype(&XCharStruct_width_Width_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XCharStruct_ascentascent", \
fntype(&XCharStruct_ascent_Ascent_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XCharStruct_descentdescent", \
fntype(&XCharStruct_descent_Descent_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XGCValues_newnewResultProxy", \
fntype(&XGCValues_new_New_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XGCValues_deletedelete", \
fntype(&XGCValues_delete_Delete_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XGCValues_functionfunction", \
fntype(&XGCValues_function_Function_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XGCValues_plane_maskplane_mask", \
fntype(&XGCValues_plane_mask_Plane_mask_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XGCValues_foregroundforeground", \
fntype(&XGCValues_foreground_Foreground_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XGCValues_backgroundbackground", \
fntype(&XGCValues_background_Background_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XGCValues_line_widthline_width", \
fntype(&XGCValues_line_width_Line_width_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XGCValues_fill_stylefill_style", \
fntype(&XGCValues_fill_style_Fill_style_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XGCValues_fill_rulefill_rule", \
fntype(&XGCValues_fill_rule_Fill_rule_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XGCValues_graphics_exposuresgraphics_exposures", \
fntype(&XGCValues_graphics_exposures_Graphics_exposures_glue), \
ExternalPrimitive, \
BooleanPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XGCValues_fontfontResultProxy:", \
fntype(&XGCValues_font_Font_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XGCValues_stipplestippleResultProxy:", \
fntype(&XGCValues_stipple_Stipple_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XGCValues_tiletileResultProxy:", \
fntype(&XGCValues_tile_Tile_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XGCValues_fontfont:", \
fntype(&XGCValues_font_Font__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XGCValues_backgroundbackground:", \
fntype(&XGCValues_background_Background__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XGCValues_foregroundforeground:", \
fntype(&XGCValues_foreground_Foreground__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XGCValues_functionfunction:", \
fntype(&XGCValues_function_Function__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XColor_newnewResultProxy", \
fntype(&XColor_new_New_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XColor_deletedelete", \
fntype(&XColor_delete_Delete_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XColor_pixelpixel", \
fntype(&XColor_pixel_Pixel_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XColor_redred", \
fntype(&XColor_red_Red_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XColor_greengreen", \
fntype(&XColor_green_Green_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XColor_blueblue", \
fntype(&XColor_blue_Blue_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XColor_flagsflags", \
fntype(&XColor_flags_Flags_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XColor_pixelpixel:", \
fntype(&XColor_pixel_Pixel__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XColor_redred:", \
fntype(&XColor_red_Red__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XColor_greengreen:", \
fntype(&XColor_green_Green__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XColor_blueblue:", \
fntype(&XColor_blue_Blue__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XColor_flagsflags:", \
fntype(&XColor_flags_Flags__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XGetPixelxGetPixelX:Y:", \
fntype(&XGetPixel_XGetPixelX_Y__glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XPutPixelxPutPixelX:Y:Value:", \
fntype(&XPutPixel_XPutPixelX_Y_Value__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSubImagexSubImageX:Y:Width:Height:ResultProxy:", \
fntype(&XSubImage_XSubImageX_Y_Width_Height__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XImagePutData_wrapxImagePutData:MappedBy:", \
fntype(&XImagePutData_wrap_XImagePutData_MappedBy__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XImageGetData_wrapxImageGetData:", \
fntype(&XImageGetData_wrap_XImageGetData__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XDestroyImagexDestroyImage", \
fntype(&XDestroyImage_XDestroyImage_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XEvent_newnewResultProxy", \
fntype(&XEvent_new_New_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XEvent_deletebasicDelete", \
fntype(&XEvent_delete_BasicDelete_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XEvent_typetype", \
fntype(&XEvent_type_Type_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "xButtonEvent_timerawTime", \
fntype(&xButtonEvent_time_RawTime_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XButtonEvent_xx", \
fntype(&XButtonEvent_x_X_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XButtonEvent_yy", \
fntype(&XButtonEvent_y_Y_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XButtonEvent_x_rootx_root", \
fntype(&XButtonEvent_x_root_X_root_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XButtonEvent_y_rooty_root", \
fntype(&XButtonEvent_y_root_Y_root_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XButtonEvent_statestate", \
fntype(&XButtonEvent_state_State_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XButtonEvent_buttonbutton", \
fntype(&XButtonEvent_button_Button_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XButtonEvent_windowwindowResultProxy:", \
fntype(&XButtonEvent_window_Window_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XClientMessageEvent_newnewResultProxy", \
fntype(&XClientMessageEvent_new_New_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XClientMessageEvent_typetype:", \
fntype(&XClientMessageEvent_type_Type__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XClientMessageEvent_serialserial", \
fntype(&XClientMessageEvent_serial_Serial_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XClientMessageEvent_serialserial:", \
fntype(&XClientMessageEvent_serial_Serial__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XClientMessageEvent_send_eventsendEvent", \
fntype(&XClientMessageEvent_send_event_SendEvent_glue), \
ExternalPrimitive, \
BooleanPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XClientMessageEvent_send_eventsendEvent:", \
fntype(&XClientMessageEvent_send_event_SendEvent__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XClientMessageEvent_displaydisplayResultProxy:", \
fntype(&XClientMessageEvent_display_Display_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XClientMessageEvent_displaydisplay:", \
fntype(&XClientMessageEvent_display_Display__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XClientMessageEvent_windowwindowResultProxy:", \
fntype(&XClientMessageEvent_window_Window_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XClientMessageEvent_windowwindow:", \
fntype(&XClientMessageEvent_window_Window__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XClientMessageEvent_message_typemessage_typeResultProxy:", \
fntype(&XClientMessageEvent_message_type_Message_type_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XClientMessageEvent_message_typemessage_type:", \
fntype(&XClientMessageEvent_message_type_Message_type__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XClientMessageEvent_formatformat", \
fntype(&XClientMessageEvent_format_Format_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XClientMessageEvent_formatformat:", \
fntype(&XClientMessageEvent_format_Format__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XClientMessageEvent_atomAt_wrapatomAt:ResultProxy:", \
fntype(&XClientMessageEvent_atomAt_wrap_AtomAt__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XClientMessageEvent_at_Atom_wrapat:Atom:", \
fntype(&XClientMessageEvent_at_Atom_wrap_At_Atom__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XClientMessageEvent_at_Long_wrapat:Long:", \
fntype(&XClientMessageEvent_at_Long_wrap_At_Long__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XClientMessageEvent_deletebasicDelete", \
fntype(&XClientMessageEvent_delete_BasicDelete_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XColormapEvent_c_newc_new", \
fntype(&XColormapEvent_c_new_C_new_glue), \
ExternalPrimitive, \
BooleanPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XColormapEvent_statestate", \
fntype(&XColormapEvent_state_State_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XColormapEvent_windowwindowResultProxy:", \
fntype(&XColormapEvent_window_Window_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XConfigureEvent_xx", \
fntype(&XConfigureEvent_x_X_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XConfigureEvent_yy", \
fntype(&XConfigureEvent_y_Y_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XConfigureEvent_widthwidth", \
fntype(&XConfigureEvent_width_Width_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XConfigureEvent_heightheight", \
fntype(&XConfigureEvent_height_Height_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XConfigureEvent_displaydisplayResultProxy:", \
fntype(&XConfigureEvent_display_Display_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XConfigureEvent_windowwindowResultProxy:", \
fntype(&XConfigureEvent_window_Window_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "xCrossingEvent_timerawTime", \
fntype(&xCrossingEvent_time_RawTime_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XCrossingEvent_windowwindowResultProxy:", \
fntype(&XCrossingEvent_window_Window_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XCrossingEvent_xx", \
fntype(&XCrossingEvent_x_X_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XCrossingEvent_yy", \
fntype(&XCrossingEvent_y_Y_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XExposeEvent_xx", \
fntype(&XExposeEvent_x_X_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XExposeEvent_yy", \
fntype(&XExposeEvent_y_Y_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XExposeEvent_widthwidth", \
fntype(&XExposeEvent_width_Width_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XExposeEvent_heightheight", \
fntype(&XExposeEvent_height_Height_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XExposeEvent_countcount", \
fntype(&XExposeEvent_count_Count_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XExposeEvent_windowwindowResultProxy:", \
fntype(&XExposeEvent_window_Window_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XFocusChangeEvent_serialserial", \
fntype(&XFocusChangeEvent_serial_Serial_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XFocusChangeEvent_displaydisplayResultProxy:", \
fntype(&XFocusChangeEvent_display_Display_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XFocusChangeEvent_windowwindowResultProxy:", \
fntype(&XFocusChangeEvent_window_Window_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XFocusChangeEvent_modemode", \
fntype(&XFocusChangeEvent_mode_Mode_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XFocusChangeEvent_detaildetail", \
fntype(&XFocusChangeEvent_detail_Detail_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XGraphicsExposeEvent_xx", \
fntype(&XGraphicsExposeEvent_x_X_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XGraphicsExposeEvent_yy", \
fntype(&XGraphicsExposeEvent_y_Y_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XGraphicsExposeEvent_widthwidth", \
fntype(&XGraphicsExposeEvent_width_Width_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XGraphicsExposeEvent_heightheight", \
fntype(&XGraphicsExposeEvent_height_Height_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XGraphicsExposeEvent_countcount", \
fntype(&XGraphicsExposeEvent_count_Count_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "xKeyEvent_timerawTime", \
fntype(&xKeyEvent_time_RawTime_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XKeyEvent_xx", \
fntype(&XKeyEvent_x_X_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XKeyEvent_yy", \
fntype(&XKeyEvent_y_Y_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XKeyEvent_x_rootx_root", \
fntype(&XKeyEvent_x_root_X_root_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XKeyEvent_y_rooty_root", \
fntype(&XKeyEvent_y_root_Y_root_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XKeyEvent_statestate", \
fntype(&XKeyEvent_state_State_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XKeyEvent_keycodekeycode", \
fntype(&XKeyEvent_keycode_Keycode_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XKeyEvent_windowwindowResultProxy:", \
fntype(&XKeyEvent_window_Window_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XLookupString_wrapxLookupStringReturn:KeySymReturn:", \
fntype(&XLookupString_wrap_XLookupStringReturn_KeySymReturn__glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XMapEvent_windowwindowResultProxy:", \
fntype(&XMapEvent_window_Window_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "xMotionEvent_timerawTime", \
fntype(&xMotionEvent_time_RawTime_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XMotionEvent_xx", \
fntype(&XMotionEvent_x_X_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XMotionEvent_yy", \
fntype(&XMotionEvent_y_Y_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XMotionEvent_x_rootx_root", \
fntype(&XMotionEvent_x_root_X_root_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XMotionEvent_y_rooty_root", \
fntype(&XMotionEvent_y_root_Y_root_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XMotionEvent_statestate", \
fntype(&XMotionEvent_state_State_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XMotionEvent_is_hintis_hint", \
fntype(&XMotionEvent_is_hint_Is_hint_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XMotionEvent_windowwindowResultProxy:", \
fntype(&XMotionEvent_window_Window_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XReparentEvent_xx", \
fntype(&XReparentEvent_x_X_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XReparentEvent_yy", \
fntype(&XReparentEvent_y_Y_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XReparentEvent_windowwindowResultProxy:", \
fntype(&XReparentEvent_window_Window_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XReparentEvent_parentparent_windowResultProxy:", \
fntype(&XReparentEvent_parent_Parent_window_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XUnmapEvent_windowwindowResultProxy:", \
fntype(&XUnmapEvent_window_Window_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XVisibilityEvent_statestate", \
fntype(&XVisibilityEvent_state_State_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XVisibilityEvent_windowwindowResultProxy:", \
fntype(&XVisibilityEvent_window_Window_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XAllocSizeHintsnewResultProxy", \
fntype(&XAllocSizeHints_New_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XFree_XSizeHints_wrapdelete", \
fntype(&XFree_XSizeHints_wrap_Delete_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSizeHints_flagsflags", \
fntype(&XSizeHints_flags_Flags_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSizeHints_min_widthmin_width", \
fntype(&XSizeHints_min_width_Min_width_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSizeHints_min_heightmin_height", \
fntype(&XSizeHints_min_height_Min_height_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSizeHints_max_widthmax_width", \
fntype(&XSizeHints_max_width_Max_width_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSizeHints_max_heightmax_height", \
fntype(&XSizeHints_max_height_Max_height_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSizeHints_xx", \
fntype(&XSizeHints_x_X_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSizeHints_yy", \
fntype(&XSizeHints_y_Y_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSizeHints_flagsflags:", \
fntype(&XSizeHints_flags_Flags__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSizeHints_min_widthmin_width:", \
fntype(&XSizeHints_min_width_Min_width__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSizeHints_min_heightmin_height:", \
fntype(&XSizeHints_min_height_Min_height__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSizeHints_max_widthmax_width:", \
fntype(&XSizeHints_max_width_Max_width__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSizeHints_max_heightmax_height:", \
fntype(&XSizeHints_max_height_Max_height__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSizeHints_xx:", \
fntype(&XSizeHints_x_X__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSizeHints_yy:", \
fntype(&XSizeHints_y_Y__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XAllocWMHintsnewResultProxy", \
fntype(&XAllocWMHints_New_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XFree_XWMHints_wrapdelete", \
fntype(&XFree_XWMHints_wrap_Delete_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWMHints_flagsflags", \
fntype(&XWMHints_flags_Flags_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWMHints_inputinput", \
fntype(&XWMHints_input_Input_glue), \
ExternalPrimitive, \
BooleanPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWMHints_initial_stateinitial_state", \
fntype(&XWMHints_initial_state_Initial_state_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWMHints_icon_xicon_x", \
fntype(&XWMHints_icon_x_Icon_x_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWMHints_icon_yicon_y", \
fntype(&XWMHints_icon_y_Icon_y_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWMHints_icon_pixmapicon_pixmapResultProxy:", \
fntype(&XWMHints_icon_pixmap_Icon_pixmap_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWMHints_icon_windowicon_windowResultProxy:", \
fntype(&XWMHints_icon_window_Icon_window_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWMHints_icon_maskicon_maskResultProxy:", \
fntype(&XWMHints_icon_mask_Icon_mask_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWMHints_flagsflags:", \
fntype(&XWMHints_flags_Flags__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWMHints_inputinput:", \
fntype(&XWMHints_input_Input__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWMHints_initial_stateinitial_state:", \
fntype(&XWMHints_initial_state_Initial_state__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWMHints_icon_xicon_x:", \
fntype(&XWMHints_icon_x_Icon_x__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWMHints_icon_yicon_y:", \
fntype(&XWMHints_icon_y_Icon_y__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWMHints_icon_pixmapicon_pixmap:", \
fntype(&XWMHints_icon_pixmap_Icon_pixmap__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWMHints_icon_windowicon_window:", \
fntype(&XWMHints_icon_window_Icon_window__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWMHints_icon_maskicon_mask:", \
fntype(&XWMHints_icon_mask_Icon_mask__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XTextProperty_newnewResultProxy", \
fntype(&XTextProperty_new_New_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XFreefreeValue", \
fntype(&XFree_FreeValue__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XTextProperty_deletebasicDelete", \
fntype(&XTextProperty_delete_BasicDelete_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XTextProperty_valuevalueResultProxy:", \
fntype(&XTextProperty_value_Value_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XStringToTextProperty_wrapxStringToTextProperty:", \
fntype(&XStringToTextProperty_wrap_XStringToTextProperty__glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
true, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
true, /* can walk stack         */ \
true, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWindowAttributes_deletedelete", \
fntype(&XWindowAttributes_delete_Delete_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWindowAttributes_xx", \
fntype(&XWindowAttributes_x_X_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWindowAttributes_yy", \
fntype(&XWindowAttributes_y_Y_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWindowAttributes_widthwidth", \
fntype(&XWindowAttributes_width_Width_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWindowAttributes_heightheight", \
fntype(&XWindowAttributes_height_Height_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWindowAttributes_border_widthborder_width", \
fntype(&XWindowAttributes_border_width_Border_width_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWindowAttributes_depthdepth", \
fntype(&XWindowAttributes_depth_Depth_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWindowAttributes_visualvisualResultProxy:", \
fntype(&XWindowAttributes_visual_Visual_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWindowAttributes_rootrootResultProxy:", \
fntype(&XWindowAttributes_root_Root_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWindowAttributes_c_classclass", \
fntype(&XWindowAttributes_c_class_Class_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWindowAttributes_bit_gravitybit_gravity", \
fntype(&XWindowAttributes_bit_gravity_Bit_gravity_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWindowAttributes_win_gravitywin_gravity", \
fntype(&XWindowAttributes_win_gravity_Win_gravity_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWindowAttributes_backing_storebacking_store", \
fntype(&XWindowAttributes_backing_store_Backing_store_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWindowAttributes_backing_planesbacking_planes", \
fntype(&XWindowAttributes_backing_planes_Backing_planes_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWindowAttributes_backing_pixelbacking_pixel", \
fntype(&XWindowAttributes_backing_pixel_Backing_pixel_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWindowAttributes_save_undersave_under", \
fntype(&XWindowAttributes_save_under_Save_under_glue), \
ExternalPrimitive, \
BooleanPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWindowAttributes_colormapcolormapResultProxy:", \
fntype(&XWindowAttributes_colormap_Colormap_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWindowAttributes_map_installedmap_installed", \
fntype(&XWindowAttributes_map_installed_Map_installed_glue), \
ExternalPrimitive, \
BooleanPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWindowAttributes_map_statemap_state", \
fntype(&XWindowAttributes_map_state_Map_state_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWindowAttributes_all_event_masksall_event_masks", \
fntype(&XWindowAttributes_all_event_masks_All_event_masks_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWindowAttributes_your_event_maskyour_event_mask", \
fntype(&XWindowAttributes_your_event_mask_Your_event_mask_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWindowAttributes_do_not_propagate_maskdo_not_propagate_mask", \
fntype(&XWindowAttributes_do_not_propagate_mask_Do_not_propagate_mask_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWindowAttributes_override_redirectoverride_redirect", \
fntype(&XWindowAttributes_override_redirect_Override_redirect_glue), \
ExternalPrimitive, \
BooleanPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XWindowAttributes_screenscreenResultProxy:", \
fntype(&XWindowAttributes_screen_Screen_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetWindowAttributesWrap_newnewResultProxy", \
fntype(&XSetWindowAttributesWrap_new_New_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetWindowAttributesWrap_deletedelete", \
fntype(&XSetWindowAttributesWrap_delete_Delete_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetWindowAttributesWrap_backgroundPixmapbackgroundPixmap:", \
fntype(&XSetWindowAttributesWrap_backgroundPixmap_BackgroundPixmap__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetWindowAttributesWrap_backgroundPixelbackgroundPixel:", \
fntype(&XSetWindowAttributesWrap_backgroundPixel_BackgroundPixel__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetWindowAttributesWrap_borderPixmapborderPixmap:", \
fntype(&XSetWindowAttributesWrap_borderPixmap_BorderPixmap__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetWindowAttributesWrap_borderPixelborderPixel:", \
fntype(&XSetWindowAttributesWrap_borderPixel_BorderPixel__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetWindowAttributesWrap_bitGravitybitGravity:", \
fntype(&XSetWindowAttributesWrap_bitGravity_BitGravity__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetWindowAttributesWrap_winGravitywinGravity:", \
fntype(&XSetWindowAttributesWrap_winGravity_WinGravity__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetWindowAttributesWrap_backingStorebackingStore:", \
fntype(&XSetWindowAttributesWrap_backingStore_BackingStore__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetWindowAttributesWrap_backingPlanesbackingPlanes:", \
fntype(&XSetWindowAttributesWrap_backingPlanes_BackingPlanes__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetWindowAttributesWrap_backingPixelbackingPixel:", \
fntype(&XSetWindowAttributesWrap_backingPixel_BackingPixel__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetWindowAttributesWrap_saveUndersaveUnder:", \
fntype(&XSetWindowAttributesWrap_saveUnder_SaveUnder__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetWindowAttributesWrap_eventMaskeventMask:", \
fntype(&XSetWindowAttributesWrap_eventMask_EventMask__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetWindowAttributesWrap_doNotPropagateMaskdoNotPropagateMask:", \
fntype(&XSetWindowAttributesWrap_doNotPropagateMask_DoNotPropagateMask__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetWindowAttributesWrap_overrideRedirectoverrideRedirect:", \
fntype(&XSetWindowAttributesWrap_overrideRedirect_OverrideRedirect__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetWindowAttributesWrap_colormapcolormap:", \
fntype(&XSetWindowAttributesWrap_colormap_Colormap__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "XSetWindowAttributesWrap_cursorcursor:", \
fntype(&XSetWindowAttributesWrap_cursor_Cursor__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \

# undef PRIMITIVE_GLUE_FLAG_CODE
# define PRIMITIVE_GLUE_FLAG_CODE


/* This information was generated by the primitive maker (primitiveMaker.self).
Please do not change it manually. -- dmu 12/91  */\
\
# ifdef INTERFACE_PRAGMAS
# pragma interface
# endif
# undef PRIMITIVE_GLUE_FLAG_CODE
# define PRIMITIVE_GLUE_FLAG_CODE BlockGlueFlag gf(xlib_semaphore);
/* Copyright 1992-2012 AUTHORS.  */\
\
/* See the LICENSE file for license information.  */\
\
# define xlib_glue    \
\
/* display  */\
\
 C_func_1( string,, XDisplayName, XDisplayName_XDisplayName__glue, , string,) \
 C_func_1( int,, DefaultScreen, DefaultScreen_DefaultScreen_glue, , proxy,(Display*,Display_seal)) \
 C_func_1( proxy,(Screen*,Screen_seal), DefaultScreenOfDisplay, DefaultScreenOfDisplay_DefaultScreenOfDisplay_glue, , proxy,(Display*,Display_seal)) \
 C_func_1( int,, ConnectionNumber, ConnectionNumber_ConnectionNumber_glue, , proxy,(Display*,Display_seal)) \
/* vendor info  */\
\
 C_func_1( string,, XServerVendor, XServerVendor_XServerVendor_glue, , proxy,(Display*,Display_seal)) \
 C_func_1( int,, XVendorRelease, XVendorRelease_XVendorRelease_glue, , proxy,(Display*,Display_seal)) \
/* visual info  */\
\
 C_func_4( proxy,(XVisualInfo*,XVisualInfo_seal), XMatchVisualInfo_wrap, XMatchVisualInfo_wrap_XMatchVisualInfoScreen_Depth_Class__glue, fail, proxy,(Display*,Display_seal), int,, int,, int,) \
/* event handling  */\
\
 C_func_2( int,, XEventsQueued, XEventsQueued_XEventsQueued__glue, , proxy,(Display*,Display_seal), int,) \
 C_func_1( int,, XPending, XPending_XPending_glue, , proxy,(Display*,Display_seal)) \
 C_func_2( void,, XNextEvent, XNextEvent_XNextEventInto__glue, , proxy,(Display*,Display_seal), proxy,(XEvent*,XEvent_seal)) \
 C_func_2( void,, XPeekEvent, XPeekEvent_XPeekEventInto__glue, , proxy,(Display*,Display_seal), proxy,(XEvent*,XEvent_seal)) \
 C_func_2( void,, XPutBackEvent, XPutBackEvent_XPutBackEvent__glue, , proxy,(Display*,Display_seal), proxy,(XEvent*,XEvent_seal)) \
 C_func_3( bool,, XCheckTypedEvent, XCheckTypedEvent_XCheckType_OfEvent__glue, , proxy,(Display*,Display_seal), int,, proxy,(XEvent*,XEvent_seal)) \
 C_func_3( bool,, XCheckMaskEvent, XCheckMaskEvent_XCheckMask_OfEvent__glue, , proxy,(Display*,Display_seal), long,, proxy,(XEvent*,XEvent_seal)) \
 C_func_3( oop,, XNextEvent_wrap, XNextEvent_wrap_XNextEventPeek_Protos__glue, fail, proxy,(Display*,Display_seal), bool,, oop,objVector) \
/* synchronization  */\
\
 C_func_1( void,, XFlush, XFlush_XFlush_glue, , proxy,(Display*,Display_seal)) \
 C_func_2( void,, XSynchronize, XSynchronize_XSynchronize__glue, , proxy,(Display*,Display_seal), bool,) \
 C_func_2( void,, XSync, XSync_XSyncDiscardingIf__glue, , proxy,(Display*,Display_seal), bool,) \
/* beeping  */\
\
 C_func_2( void,, XBell, XBell_XBell__glue, , proxy,(Display*,Display_seal), int,) \
/* gc  */\
\
 C_func_4( void,, XChangeGC, XChangeGC_XChangeGC_ValueMask_Values__glue, , proxy,(Display*,Display_seal), proxy,(GC,GC_seal), unsigned_long,, proxy,(XGCValues*,XGCValues_seal)) \
 C_func_4( proxy,(GC,GC_seal), XCreateGC, XCreateGC_XCreateGCDrawable_ValueMask_Values__glue, , proxy,(Display*,Display_seal), proxy,(Drawable,ANY_SEAL), unsigned_long,, proxy,(XGCValues*,XGCValues_seal)) \
 C_func_2( void,, XFreeGC, XFreeGC_XFreeGC__glue, , proxy,(Display*,Display_seal), proxy,(GC,GC_seal)) \
 C_func_4( void,, XGetGCValues_wrap, XGetGCValues_wrap_XGetGCValuesGC_ValueMask_Values__glue, fail, proxy,(Display*,Display_seal), proxy,(GC,GC_seal), unsigned_long,, proxy,(XGCValues*,XGCValues_seal)) \
 C_func_3( void,, XSetForeground, XSetForeground_XSetGC_Foreground__glue, , proxy,(Display*,Display_seal), proxy,(GC,GC_seal), unsigned_long,) \
 C_func_3( void,, XSetBackground, XSetBackground_XSetGC_Background__glue, , proxy,(Display*,Display_seal), proxy,(GC,GC_seal), unsigned_long,) \
 C_func_3( void,, XSetFunction, XSetFunction_XSetGC_Function__glue, , proxy,(Display*,Display_seal), proxy,(GC,GC_seal), int,) \
 C_func_3( void,, XSetPlaneMask, XSetPlaneMask_XSetGC_PlaneMask__glue, , proxy,(Display*,Display_seal), proxy,(GC,GC_seal), unsigned_long,) \
 C_func_6( void,, XSetLineAttributes, XSetLineAttributes_XSetGC_LineAttributesWidth_LineStyle_CapStyle_JoinStyle__glue, , proxy,(Display*,Display_seal), proxy,(GC,GC_seal), unsigned_int,, int,, int,, int,) \
 C_func_4( void,, XSetDashes, XSetDashes_XSetGC_DashesOffset_DashList__glue, , proxy,(Display*,Display_seal), proxy,(GC,GC_seal), int,, bv_len,char*) \
 C_func_3( void,, XSetFont, XSetFont_XSetGC_Font__glue, , proxy,(Display*,Display_seal), proxy,(GC,GC_seal), proxy,(Font,Font_seal)) \
 C_func_3( void,, XSetGraphicsExposures, XSetGraphicsExposures_XSetGC_GraphicsExposures__glue, , proxy,(Display*,Display_seal), proxy,(GC,GC_seal), bool,) \
 C_func_3( void,, XSetFillStyle, XSetFillStyle_XSetGC_FillStyle__glue, , proxy,(Display*,Display_seal), proxy,(GC,GC_seal), int,) \
 C_func_3( void,, XSetFillRule, XSetFillRule_XSetGC_FillRule__glue, , proxy,(Display*,Display_seal), proxy,(GC,GC_seal), int,) \
 C_func_3( void,, XSetStipple, XSetStipple_XSetGC_Stipple__glue, , proxy,(Display*,Display_seal), proxy,(GC,GC_seal), proxy,(Pixmap,Pixmap_seal)) \
 C_func_3( void,, XSetSubwindowMode, XSetSubwindowMode_XSetGC_SubwindowMode__glue, , proxy,(Display*,Display_seal), proxy,(GC,GC_seal), int,) \
 C_func_3( void,, XSetTile, XSetTile_XSetGC_Tile__glue, , proxy,(Display*,Display_seal), proxy,(GC,GC_seal), proxy,(Pixmap,Pixmap_seal)) \
 C_func_4( void,, XSetClipOrigin, XSetClipOrigin_XSetClipOrigin_X_Y__glue, , proxy,(Display*,Display_seal), proxy,(GC,GC_seal), int,, int,) \
 C_func_3( void,, XSetClipMask, XSetClipMask_XSetClipMask_Pixmap__glue, , proxy,(Display*,Display_seal), proxy,(GC,GC_seal), proxy_null,(Pixmap,Pixmap_seal)) \
 C_func_6( void,, XSetClipRectangle_wrap, XSetClipRectangle_wrap_XSetClipRectangle_X_Y_Width_Height__glue, , proxy,(Display*,Display_seal), proxy,(GC,GC_seal), int,, int,, int,, int,) \
 C_func_4( unsigned_long,, XQueryBestStippleWidth, XQueryBestStippleWidth_XQueryBestStippleWidth_Width_Height__glue, fail, proxy,(Display*,Display_seal), proxy,(Drawable,ANY_SEAL), int,, int,) \
 C_func_4( unsigned_long,, XQueryBestStippleHeight, XQueryBestStippleHeight_XQueryBestStippleHeight_Width_Height__glue, fail, proxy,(Display*,Display_seal), proxy,(Drawable,ANY_SEAL), int,, int,) \
 C_func_4( unsigned_long,, XQueryBestTileWidth, XQueryBestTileWidth_XQueryBestTileWidth_Width_Height__glue, fail, proxy,(Display*,Display_seal), proxy,(Drawable,ANY_SEAL), int,, int,) \
 C_func_4( unsigned_long,, XQueryBestTileHeight, XQueryBestTileHeight_XQueryBestTileHeight_Width_Height__glue, fail, proxy,(Display*,Display_seal), proxy,(Drawable,ANY_SEAL), int,, int,) \
 C_func_4( proxy_null,(Window,Window_seal), XTranslateCoordinates_wrap, XTranslateCoordinates_wrap_XTranslateCoordinatesSrcWindow_DstWindow_Coordinates__glue, fail, proxy,(Display*,Display_seal), proxy,(Window,Window_seal), proxy,(Window,Window_seal), oop,objVector) \
/* atom  */\
\
 C_func_3( proxy,(Atom,Atom_seal), XInternAtom, XInternAtom_XInternAtom_OnlyIfExists__glue, , proxy,(Display*,Display_seal), string,, bool,) \
/* window  */\
\
 C_func_9( proxy,(Window,Window_seal), XCreateIOWindow_wrap, XCreateIOWindow_wrap_XCreateIOWindowIn_X_Y_Width_Height_Depth_Visual_Attributes__glue, , proxy,(Display*,Display_seal), proxy,(Window,Window_seal), int,, int,, unsigned_int,, unsigned_int,, int,, proxy,(Visual*,Visual_seal), proxy,(XSetWindowAttributesWrap*,XSetWindowAttributesWrap_seal)) \
 C_func_9( proxy,(Window,Window_seal), XCreateSimpleWindow, XCreateSimpleWindow_XCreateSimpleWindowIn_X_Y_Width_Height_BorderWidth_Border_Background__glue, , proxy,(Display*,Display_seal), proxy,(Window,Window_seal), int,, int,, unsigned_int,, unsigned_int,, unsigned_int,, long,, long,) \
 C_func_3( void,, XChangeWindowAttributes_wrap, XChangeWindowAttributes_wrap_XChangeWindowAttributesIn_Attributes__glue, , proxy,(Display*,Display_seal), proxy,(Window,Window_seal), proxy,(XSetWindowAttributesWrap*,XSetWindowAttributesWrap_seal)) \
 C_func_2( proxy,(XWindowAttributes*,XWindowAttributes_seal), XGetWindowAttributes_wrap, XGetWindowAttributes_wrap_XGetWindowAttributesIn__glue, fail, proxy,(Display*,Display_seal), proxy,(Window,Window_seal)) \
 C_func_5( int,, XSendEvent, XSendEvent_XSendEventToWindow_Propogate_EventMask_Event__glue, , proxy,(Display*,Display_seal), proxy,(Window,Window_seal), bool,, unsigned_long,, proxy,(XEvent*,XEvent_seal)) \
 C_func_3( int,, XSetWMProtocol_wrap, XSetWMProtocol_wrap_XSetWMProtocolOfWindow_Protocol__glue, , proxy,(Display*,Display_seal), proxy,(Window,Window_seal), proxy,(Atom,Atom_seal)) \
 C_func_3( void,, XSetWMName, XSetWMName_XSetWMNameOfWindow_To__glue, , proxy,(Display*,Display_seal), proxy,(Window,Window_seal), proxy,(XTextProperty*,XTextProperty_seal)) \
 C_func_3( void,, XSetWMIconName, XSetWMIconName_XSetWMIconNameOfWindow_To__glue, , proxy,(Display*,Display_seal), proxy,(Window,Window_seal), proxy,(XTextProperty*,XTextProperty_seal)) \
 C_func_3( void,, XSetWMHints, XSetWMHints_XSetWMHintsOfWindow_To__glue, , proxy,(Display*,Display_seal), proxy,(Window,Window_seal), proxy,(XWMHints*,XWMHints_seal)) \
 C_func_3( void,, XSetWMNormalHints, XSetWMNormalHints_XSetWMNormalHintsOfWindow_To__glue, , proxy,(Display*,Display_seal), proxy,(Window,Window_seal), proxy,(XSizeHints*,XSizeHints_seal)) \
 C_func_3( void,, XSelectInput, XSelectInput_XSelectInputOfWindow_EventMask__glue, , proxy,(Display*,Display_seal), proxy,(Window,Window_seal), long,) \
 C_func_2( void,, XMapWindow, XMapWindow_XMapWindow__glue, , proxy,(Display*,Display_seal), proxy,(Window,Window_seal)) \
 C_func_2( void,, XRaiseWindow, XRaiseWindow_XRaiseWindow__glue, , proxy,(Display*,Display_seal), proxy,(Window,Window_seal)) \
 C_func_2( void,, XLowerWindow, XLowerWindow_XLowerWindow__glue, , proxy,(Display*,Display_seal), proxy,(Window,Window_seal)) \
 C_func_4( void,, XMoveWindow, XMoveWindow_XMoveWindow_X_Y__glue, , proxy,(Display*,Display_seal), proxy,(Window,Window_seal), int,, int,) \
 C_func_4( void,, XMoveWindowBy_wrap, XMoveWindowBy_wrap_XMoveWindowBy_X_Y__glue, , proxy,(Display*,Display_seal), proxy,(Window,Window_seal), int,, int,) \
 C_func_4( void,, XMoveWindowBy_wrap, XMoveWindowBy_wrap_XMoveWindow_ByX_Y__glue, , proxy,(Display*,Display_seal), proxy,(Window,Window_seal), int,, int,) \
 C_func_6( void,, XMoveResizeWindow, XMoveResizeWindow_XMoveResizeWindow_X_Y_W_H__glue, , proxy,(Display*,Display_seal), proxy,(Window,Window_seal), int,, int,, int,, int,) \
 C_func_4( void,, XSetInputFocus, XSetInputFocus_XSetInputFocusWindow_RevertTo_Time__glue, , proxy,(Display*,Display_seal), proxy,(Window,Window_seal), int,, int,) \
 C_func_2( void,, XUnmapWindow, XUnmapWindow_XUnmapWindow__glue, , proxy,(Display*,Display_seal), proxy,(Window,Window_seal)) \
 C_func_2( void,, XDestroyWindow, XDestroyWindow_XDestroyWindow__glue, , proxy,(Display*,Display_seal), proxy,(Window,Window_seal)) \
/* subwindows  */\
\
 C_func_3( void,, XCirculateSubwindows, XCirculateSubwindows_XCirculateSubwindows_Direction__glue, , proxy,(Display*,Display_seal), proxy,(Window,Window_seal), int,) \
 C_func_2( void,, XCirculateSubwindowsDown, XCirculateSubwindowsDown_XCirculateSubwindowsDown__glue, , proxy,(Display*,Display_seal), proxy,(Window,Window_seal)) \
 C_func_2( void,, XCirculateSubwindowsUp, XCirculateSubwindowsUp_XCirculateSubwindowsUp__glue, , proxy,(Display*,Display_seal), proxy,(Window,Window_seal)) \
 C_func_2( void,, XMapSubwindows, XMapSubwindows_XMapSubwindows__glue, , proxy,(Display*,Display_seal), proxy,(Window,Window_seal)) \
 C_func_2( void,, XUnmapSubwindows, XUnmapSubwindows_XUnmapSubwindows__glue, , proxy,(Display*,Display_seal), proxy,(Window,Window_seal)) \
 C_func_2( void,, XDestroySubwindows, XDestroySubwindows_XDestroySubwindows__glue, , proxy,(Display*,Display_seal), proxy,(Window,Window_seal)) \
/* cursor  */\
\
 C_func_9( void,, XWarpPointer, XWarpPointer_XWarpPointerSrcWindow_DestWindow_SrcX_SrcY_SrcWidth_SrcHeight_DestX_DestY__glue, , proxy,(Display*,Display_seal), proxy_null,(Window,Window_seal), proxy_null,(Window,Window_seal), int,, int,, unsigned_int,, unsigned_int,, int,, int,) \
 C_func_9( int,, XGrabPointer, XGrabPointer_XGrabPointerWindow_OwnerEvents_EventMask_PointerMode_KeyboardMode_ConfineTo_Cursor_Time__glue, , proxy,(Display*,Display_seal), proxy,(Window,Window_seal), bool,, unsigned_int,, int,, int,, proxy_null,(Window,Window_seal), proxy_null,(Cursor,Cursor_seal), unsigned_long,) \
 C_func_2( void,, XUngrabPointer, XUngrabPointer_XUngrabPointerTime__glue, , proxy,(Display*,Display_seal), unsigned_long,) \
 C_func_4( void,, XUngrabButton, XUngrabButton_XUngrabButton_Modifiers_Window__glue, , proxy,(Display*,Display_seal), int,, int,, proxy,(Window,Window_seal)) \
 C_func_3( void,, XDefineCursor, XDefineCursor_XDefineCursorWindow_Cursor__glue, , proxy,(Display*,Display_seal), proxy,(Window,Window_seal), proxy_null,(Cursor,Cursor_seal)) \
 C_func_2( void,, XUndefineCursor, XUndefineCursor_XUndefineCursorWindow__glue, , proxy,(Display*,Display_seal), proxy,(Window,Window_seal)) \
 C_func_7( proxy,(Cursor,Cursor_seal), XCreatePixmapCursor, XCreatePixmapCursor_XCreatePixmapCursorSource_Mask_ForegroundColor_BackgroundColor_X_Y__glue, , proxy,(Display*,Display_seal), proxy,(Pixmap,Pixmap_seal), proxy_null,(Pixmap,Pixmap_seal), proxy,(XColor*,XColor_seal), proxy,(XColor*,XColor_seal), unsigned_int,, unsigned_int,) \
 C_func_2( void,, XFreeCursor, XFreeCursor_XFreeCursor__glue, , proxy,(Display*,Display_seal), proxy,(Cursor,Cursor_seal)) \
 C_func_2( proxy,(Cursor,Cursor_seal), XCreateFontCursor, XCreateFontCursor_XCreateFontCursorType__glue, , proxy,(Display*,Display_seal), int,) \
/* colormap  */\
\
 C_func_4( proxy,(Colormap,Colormap_seal), XCreateColormap, XCreateColormap_XCreateColormapWindow_Visual_Allocate__glue, , proxy,(Display*,Display_seal), proxy,(Window,Window_seal), proxy,(Visual*,Visual_seal), bool,) \
 C_func_2( void,, XFreeColormap, XFreeColormap_XFreeColormap__glue, , proxy,(Display*,Display_seal), proxy,(Colormap,Colormap_seal)) \
 C_func_3( void,, XSetWindowColormap, XSetWindowColormap_XSetWindow_Colormap__glue, , proxy,(Display*,Display_seal), proxy,(Window,Window_seal), proxy,(Colormap,Colormap_seal)) \
 C_func_3( void,, XQueryColors_wrap, XQueryColors_wrap_XQueryColorsInColormap_Colors__glue, fail, proxy,(Display*,Display_seal), proxy,(Colormap,Colormap_seal), oop,objVector) \
 C_func_3( void,, XStoreColors_wrap, XStoreColors_wrap_XStoreColorsInColormap_Colors__glue, fail, proxy,(Display*,Display_seal), proxy,(Colormap,Colormap_seal), oop,objVector) \
 C_func_3( void,, XQueryColor, XQueryColor_XQueryColorInColormap_Color__glue, , proxy,(Display*,Display_seal), proxy,(Colormap,Colormap_seal), proxy,(XColor*,XColor_seal)) \
 C_func_3( void,, XStoreColor, XStoreColor_XStoreColorInColormap_Color__glue, , proxy,(Display*,Display_seal), proxy,(Colormap,Colormap_seal), proxy,(XColor*,XColor_seal)) \
 C_func_3( int,, XAllocColor, XAllocColor_XAllocColorInColormap_Color__glue, , proxy,(Display*,Display_seal), proxy,(Colormap,Colormap_seal), proxy,(XColor*,XColor_seal)) \
 C_func_5( void,, XAllocColorCells_wrap, XAllocColorCells_wrap_XAllocColorCellsInColormap_Contig_PlaneMasksReturn_PixelsReturn__glue, fail, proxy,(Display*,Display_seal), proxy,(Colormap,Colormap_seal), bool,, oop,objVector, oop,objVector) \
 C_func_4( void,, XFreeColorCells_wrap, XFreeColorCells_wrap_XFreeColorCellsInColormap_Pixels_Planes__glue, fail, proxy,(Display*,Display_seal), proxy,(Colormap,Colormap_seal), oop,objVector, unsigned_long,) \
/* pixmap  */\
\
 C_func_5( proxy,(Pixmap,Pixmap_seal), XCreateBitmapFromData, XCreateBitmapFromData_XCreateBitmapDrawable_Data_Width_Height__glue, , proxy,(Display*,Display_seal), proxy,(Drawable,ANY_SEAL), cbv,char*, unsigned_int,, unsigned_int,) \
 C_func_5( proxy,(Pixmap,Pixmap_seal), XCreatePixmap, XCreatePixmap_XCreatePixmap_Width_Height_Depth__glue, , proxy,(Display*,Display_seal), proxy,(Drawable,ANY_SEAL), unsigned_int,, unsigned_int,, unsigned_int,) \
 C_func_2( void,, XFreePixmap, XFreePixmap_XFreePixmap__glue, , proxy,(Display*,Display_seal), proxy,(Pixmap,Pixmap_seal)) \
/* shapes  */\
\
 C_func_1( bool,, XShapeQueryExtension_wrap, XShapeQueryExtension_wrap_XShapeQueryExtension_glue, , proxy,(Display*,Display_seal)) \
 C_func_7( void,, XShapeCombineRegion_wrap, XShapeCombineRegion_wrap_XShapeCombineRegion_DestKind_X_Y_Region_Operation__glue, , proxy,(Display*,Display_seal), proxy,(Drawable,ANY_SEAL), int,, int,, int,, proxy,(Region,Region_seal), int,) \
 C_func_7( void,, XShapeCombineMask_wrap, XShapeCombineMask_wrap_XShapeCombineMask_DestKind_X_Y_Mask_Operation__glue, , proxy,(Display*,Display_seal), proxy,(Drawable,ANY_SEAL), int,, int,, int,, proxy_null,(Pixmap,Pixmap_seal), int,) \
 C_func_8( void,, XShapeCombineShape_wrap, XShapeCombineShape_wrap_XShapeCombineShape_DestKind_X_Y_Shape_ShapeKind_Operation__glue, , proxy,(Display*,Display_seal), proxy,(Drawable,ANY_SEAL), int,, int,, int,, proxy,(Drawable,ANY_SEAL), int,, int,) \
 C_func_8( void,, XShapeCombineRectangle_wrap, XShapeCombineRectangle_wrap_XShapeCombineRectangle_DestKind_X_Y_Width_Height_Operation__glue, , proxy,(Display*,Display_seal), proxy,(Drawable,ANY_SEAL), int,, int,, int,, unsigned_int,, unsigned_int,, int,) \
/* drawing  */\
\
 C_func_7( void,, XClearArea, XClearArea_XClearAreaIn_X_Y_Width_Height_Exposures__glue, , proxy,(Display*,Display_seal), proxy,(Window,Window_seal), int,, int,, unsigned_int,, unsigned_int,, bool,) \
 C_func_10( void,, XCopyArea, XCopyArea_XCopyAreaSrc_Dest_GC_SrcX_SrcY_Width_Height_DestX_DestY__glue, , proxy,(Display*,Display_seal), proxy,(Drawable,ANY_SEAL), proxy,(Drawable,ANY_SEAL), proxy,(GC,GC_seal), int,, int,, unsigned_int,, unsigned_int,, int,, int,) \
 C_func_5( void,, XDrawPoint, XDrawPoint_XDrawPoint_GC_X_Y__glue, , proxy,(Display*,Display_seal), proxy,(Drawable,ANY_SEAL), proxy,(GC,GC_seal), int,, int,) \
 C_func_7( void,, XDrawLine, XDrawLine_XDrawLine_GC_X1_Y1_X2_Y2__glue, , proxy,(Display*,Display_seal), proxy,(Drawable,ANY_SEAL), proxy,(GC,GC_seal), int,, int,, int,, int,) \
 C_func_6( void,, XDrawLines_wrap, XDrawLines_wrap_XDrawLines_GC_Xs_Ys_Mode__glue, fail, proxy,(Display*,Display_seal), proxy,(Drawable,ANY_SEAL), proxy,(GC,GC_seal), oop,objVector, oop,objVector, int,) \
 C_func_7( void,, XDrawRectangle, XDrawRectangle_XDrawRectangle_GC_X_Y_Width_Height__glue, , proxy,(Display*,Display_seal), proxy,(Drawable,ANY_SEAL), proxy,(GC,GC_seal), int,, int,, unsigned_int,, unsigned_int,) \
 C_func_7( void,, XFillRectangle, XFillRectangle_XFillRectangle_GC_X_Y_Width_Height__glue, , proxy,(Display*,Display_seal), proxy,(Drawable,ANY_SEAL), proxy,(GC,GC_seal), int,, int,, unsigned_int,, unsigned_int,) \
 C_func_7( void,, XFillPolygon_wrap, XFillPolygon_wrap_XFillPolygon_GC_Xs_Ys_Shape_Mode__glue, fail, proxy,(Display*,Display_seal), proxy,(Drawable,ANY_SEAL), proxy,(GC,GC_seal), oop,objVector, oop,objVector, int,, int,) \
 C_func_9( void,, XDrawArc, XDrawArc_XDrawArc_GC_X_Y_Width_Height_StartAngle_EndAngle__glue, , proxy,(Display*,Display_seal), proxy,(Drawable,ANY_SEAL), proxy,(GC,GC_seal), int,, int,, unsigned_int,, unsigned_int,, int,, int,) \
 C_func_9( void,, XFillArc, XFillArc_XFillArc_GC_X_Y_Width_Height_StartAngle_EndAngle__glue, , proxy,(Display*,Display_seal), proxy,(Drawable,ANY_SEAL), proxy,(GC,GC_seal), int,, int,, unsigned_int,, unsigned_int,, int,, int,) \
 C_func_6( void,, XDrawString, XDrawString_XDrawString_GC_X_Y_String__glue, , proxy,(Display*,Display_seal), proxy,(Drawable,ANY_SEAL), proxy,(GC,GC_seal), int,, int,, string_len_null,) \
 C_func_6( void,, XDrawString16_wrap, XDrawString16_wrap_XDrawString16_GC_X_Y_StringVector__glue, fail, proxy,(Display*,Display_seal), proxy,(Drawable,ANY_SEAL), proxy,(GC,GC_seal), int,, int,, oop,objVector) \
/* font  */\
\
 C_func_2( proxy,(XFontStruct*,XFontStruct_seal), XQueryFont, XQueryFont_XQueryFont__glue, , proxy,(Display*,Display_seal), proxy,(Font,Font_seal)) \
 C_func_2( proxy,(XFontStruct*,XFontStruct_seal), XLoadQueryFont_wrap, XLoadQueryFont_wrap_XLoadQueryFont__glue, fail, proxy,(Display*,Display_seal), string_null,) \
 C_func_2( void,, XFreeFont, XFreeFont_XFreeFont__glue, , proxy,(Display*,Display_seal), proxy,(XFontStruct*,XFontStruct_seal)) \
/* image  */\
\
 C_func_7( proxy,(XImage*,XImage_seal), XCreateImage_wrap, XCreateImage_wrap_XCreateImage_Depth_Format_Width_Height_BitmapPad__glue, , proxy,(Display*,Display_seal), proxy,(Visual*,Visual_seal), unsigned_int,, int,, unsigned_int,, unsigned_int,, int,) \
 C_func_8( proxy,(XImage*,XImage_seal), XGetImage, XGetImage_XGetImage_X_Y_Width_Height_PlaneMask_Format__glue, , proxy,(Display*,Display_seal), proxy,(Drawable,ANY_SEAL), int,, int,, unsigned_int,, unsigned_int,, unsigned_long,, int,) \
 C_func_10( void,, XPutImage, XPutImage_XPutImage_GC_Image_SrcX_SrcY_DestX_DestY_Width_Height__glue, , proxy,(Display*,Display_seal), proxy,(Drawable,ANY_SEAL), proxy,(GC,GC_seal), proxy,(XImage*,XImage_seal), int,, int,, int,, int,, unsigned_int,, unsigned_int,) \
 C_func_11( proxy,(XImage*,XImage_seal), XGetSubImage, XGetSubImage_XGetSubImage_X_Y_Width_Height_PlaneMask_Format_DestImage_DestX_DestY__glue, , proxy,(Display*,Display_seal), proxy,(Drawable,ANY_SEAL), int,, int,, unsigned_int,, unsigned_int,, unsigned_long,, int,, proxy,(XImage*,XImage_seal), int,, int,) \
/* cut and paste buffers  */\
\
 C_func_2( void,, XStoreBytes_wrap, XStoreBytes_wrap_XStoreBytes__glue, fail, proxy,(Display*,Display_seal), string,) \
 C_func_1( string,, XFetchBytes_wrap, XFetchBytes_wrap_XFetchBytes_glue, fail, proxy,(Display*,Display_seal)) \
 C_get_var( proxy_null,(Window,Window_seal), NULL, NULL_NullWindow_glue) \
 C_func_1( int,, MYSELF, MYSELF_WindowDescriptor_glue, , proxy_null,(int,Window_seal)) \
 C_get_var( proxy_null,(Pixmap,Pixmap_seal), NULL, NULL_NullPixmap_glue) \
 C_get_var( proxy_null,(Region,Region_seal), NULL, NULL_NullRegion_glue) \
 C_func_0( proxy,(Region,Region_seal), XCreateRegion_wrap, XCreateRegion_wrap_XCreateRegion_glue, ) \
 C_func_1( void,, XDestroyRegion_wrap, XDestroyRegion_wrap_XDestroyRegion_glue, , proxy,(Region,Region_seal)) \
 C_func_1( bool,, XEmptyRegion_wrap, XEmptyRegion_wrap_XEmptyRegion_glue, , proxy,(Region,Region_seal)) \
 C_func_2( bool,, XEqualRegion_wrap, XEqualRegion_wrap_XEqualRegion__glue, , proxy,(Region,Region_seal), proxy,(Region,Region_seal)) \
 C_func_3( void,, XUnionRegion_wrap, XUnionRegion_wrap_XUnionRegion_Region__glue, , proxy,(Region,Region_seal), proxy,(Region,Region_seal), proxy,(Region,Region_seal)) \
 C_func_6( void,, XUnionRectWithRegion_wrap, XUnionRectWithRegion_wrap_XUnionRectWithRegion_X_Y_Width_Height__glue, , proxy,(Region,Region_seal), proxy,(Region,Region_seal), int,, int,, unsigned_int,, unsigned_int,) \
 C_func_3( void,, XIntersectRegion_wrap, XIntersectRegion_wrap_XIntersectRegion_Region__glue, , proxy,(Region,Region_seal), proxy,(Region,Region_seal), proxy,(Region,Region_seal)) \
 C_func_3( void,, XXorRegion_wrap, XXorRegion_wrap_XXorRegion_Region__glue, , proxy,(Region,Region_seal), proxy,(Region,Region_seal), proxy,(Region,Region_seal)) \
 C_func_3( void,, XSubtractRegion_wrap, XSubtractRegion_wrap_XSubtractRegion_Region__glue, , proxy,(Region,Region_seal), proxy,(Region,Region_seal), proxy,(Region,Region_seal)) \
 C_func_3( void,, XOffsetRegion_wrap, XOffsetRegion_wrap_XOffsetX_Y__glue, , proxy,(Region,Region_seal), int,, int,) \
 C_get_var( proxy_null,(Cursor,Cursor_seal), NULL, NULL_NullCursor_glue) \
 C_func_1( proxy,(Window,Window_seal), RootWindowOfScreen, RootWindowOfScreen_RootWindowOfScreen_glue, , proxy,(Screen*,Screen_seal)) \
 C_func_1( proxy,(Visual*,Visual_seal), DefaultVisualOfScreen, DefaultVisualOfScreen_DefaultVisualOfScreen_glue, , proxy,(Screen*,Screen_seal)) \
 C_func_1( proxy,(GC,GC_seal), DefaultGCOfScreen, DefaultGCOfScreen_DefaultGCOfScreen_glue, , proxy,(Screen*,Screen_seal)) \
 C_func_1( proxy,(Colormap,Colormap_seal), DefaultColormapOfScreen, DefaultColormapOfScreen_DefaultColormapOfScreen_glue, , proxy,(Screen*,Screen_seal)) \
 C_func_1( long,, BlackPixelOfScreen, BlackPixelOfScreen_BlackPixelOfScreen_glue, , proxy,(Screen*,Screen_seal)) \
 C_func_1( long,, WhitePixelOfScreen, WhitePixelOfScreen_WhitePixelOfScreen_glue, , proxy,(Screen*,Screen_seal)) \
 C_func_1( int,, WidthOfScreen, WidthOfScreen_WidthOfScreen_glue, , proxy,(Screen*,Screen_seal)) \
 C_func_1( int,, WidthMMOfScreen, WidthMMOfScreen_WidthMMOfScreen_glue, , proxy,(Screen*,Screen_seal)) \
 C_func_1( int,, HeightOfScreen, HeightOfScreen_HeightOfScreen_glue, , proxy,(Screen*,Screen_seal)) \
 C_func_1( int,, DefaultDepthOfScreen, DefaultDepthOfScreen_DefaultDepthOfScreen_glue, , proxy,(Screen*,Screen_seal)) \
 C_func_1( int,, XScreenNumberOfScreen, XScreenNumberOfScreen_XScreenNumberOfScreen_glue, , proxy,(Screen*,Screen_seal)) \
 CC_new_0( proxy,(XVisualInfo*,XVisualInfo_seal), XVisualInfo, XVisualInfo_new_New_glue) \
 CC_delete( proxy,(XVisualInfo*,XVisualInfo_seal), XVisualInfo_delete_Delete_glue) \
 C_get_comp( proxy,(Visual*,Visual_seal), proxy,(XVisualInfo*,XVisualInfo_seal), .visual, XVisualInfo_visual_Visual_glue) \
 C_get_comp( int,, proxy,(XVisualInfo*,XVisualInfo_seal), .visualid, XVisualInfo_visualid_VisualID_glue) \
 C_set_comp( proxy,(XVisualInfo*,XVisualInfo_seal), .visualid, int,, XVisualInfo_visualid_VisualID__glue) \
 C_get_comp( int,, proxy,(XVisualInfo*,XVisualInfo_seal), .screen, XVisualInfo_screen_Screen_glue) \
 C_get_comp( int,, proxy,(XVisualInfo*,XVisualInfo_seal), .depth, XVisualInfo_depth_Depth_glue) \
 C_set_comp( proxy,(XVisualInfo*,XVisualInfo_seal), .depth, int,, XVisualInfo_depth_Depth__glue) \
 C_get_comp( int,, proxy,(XVisualInfo*,XVisualInfo_seal), .c_class, XVisualInfo_c_class_Class_glue) \
 C_get_comp( unsigned_long,, proxy,(XVisualInfo*,XVisualInfo_seal), .red_mask, XVisualInfo_red_mask_Red_mask_glue) \
 C_get_comp( unsigned_long,, proxy,(XVisualInfo*,XVisualInfo_seal), .green_mask, XVisualInfo_green_mask_Green_mask_glue) \
 C_get_comp( unsigned_long,, proxy,(XVisualInfo*,XVisualInfo_seal), .blue_mask, XVisualInfo_blue_mask_Blue_mask_glue) \
 C_get_comp( int,, proxy,(XVisualInfo*,XVisualInfo_seal), .colormap_size, XVisualInfo_colormap_size_Cmap_size_glue) \
 C_get_comp( int,, proxy,(XVisualInfo*,XVisualInfo_seal), .bits_per_rgb, XVisualInfo_bits_per_rgb_Bits_per_rgb_glue) \
 C_func_2( int,, XTextWidth, XTextWidth_XTextWidth__glue, , proxy,(XFontStruct*,XFontStruct_seal), string_len_null,) \
 C_get_comp( proxy,(Font,Font_seal), proxy,(XFontStruct*,XFontStruct_seal), .fid, XFontStruct_fid_Fid_glue) \
 C_get_comp( int,, proxy,(XFontStruct*,XFontStruct_seal), .ascent, XFontStruct_ascent_Ascent_glue) \
 C_get_comp( int,, proxy,(XFontStruct*,XFontStruct_seal), .descent, XFontStruct_descent_Descent_glue) \
 C_get_comp( int,, proxy,(XFontStruct*,XFontStruct_seal), .max_char_or_byte2, XFontStruct_max_char_or_byte2_Max_char_or_byte2_glue) \
 C_get_comp( int,, proxy,(XFontStruct*,XFontStruct_seal), .min_char_or_byte2, XFontStruct_min_char_or_byte2_Min_char_or_byte2_glue) \
 C_get_comp( bool,, proxy,(XFontStruct*,XFontStruct_seal), .per_char, XFontStruct_per_char_Per_char_glue) \
 C_func_1( int,, maxCharWidth, maxCharWidth_MaxCharWidth_glue, , proxy,(XFontStruct*,XFontStruct_seal)) \
 C_func_1( int,, maxAscent, maxAscent_MaxAscent_glue, , proxy,(XFontStruct*,XFontStruct_seal)) \
 C_func_1( int,, maxDescent, maxDescent_MaxDescent_glue, , proxy,(XFontStruct*,XFontStruct_seal)) \
 C_func_2( int,, perCharWidth, perCharWidth_PerCharWidth__glue, , proxy,(XFontStruct*,XFontStruct_seal), int,) \
 C_func_1( int,, XVisualIDFromVisual, XVisualIDFromVisual_XVisualIDFromVisual_glue, , proxy,(Visual*,Visual_seal)) \
 C_get_comp( int,, proxy,(XCharStruct*,XCharStruct_seal), .width, XCharStruct_width_Width_glue) \
 C_get_comp( int,, proxy,(XCharStruct*,XCharStruct_seal), .ascent, XCharStruct_ascent_Ascent_glue) \
 C_get_comp( int,, proxy,(XCharStruct*,XCharStruct_seal), .descent, XCharStruct_descent_Descent_glue) \
 CC_new_0( proxy,(XGCValues*,XGCValues_seal), XGCValues, XGCValues_new_New_glue) \
 CC_delete( proxy,(XGCValues*,XGCValues_seal), XGCValues_delete_Delete_glue) \
 C_get_comp( int,, proxy,(XGCValues*,XGCValues_seal), .function, XGCValues_function_Function_glue) \
 C_get_comp( unsigned_long,, proxy,(XGCValues*,XGCValues_seal), .plane_mask, XGCValues_plane_mask_Plane_mask_glue) \
 C_get_comp( unsigned_long,, proxy,(XGCValues*,XGCValues_seal), .foreground, XGCValues_foreground_Foreground_glue) \
 C_get_comp( unsigned_long,, proxy,(XGCValues*,XGCValues_seal), .background, XGCValues_background_Background_glue) \
 C_get_comp( int,, proxy,(XGCValues*,XGCValues_seal), .line_width, XGCValues_line_width_Line_width_glue) \
 C_get_comp( int,, proxy,(XGCValues*,XGCValues_seal), .fill_style, XGCValues_fill_style_Fill_style_glue) \
 C_get_comp( int,, proxy,(XGCValues*,XGCValues_seal), .fill_rule, XGCValues_fill_rule_Fill_rule_glue) \
 C_get_comp( bool,, proxy,(XGCValues*,XGCValues_seal), .graphics_exposures, XGCValues_graphics_exposures_Graphics_exposures_glue) \
 C_get_comp( proxy,(Font,Font_seal), proxy,(XGCValues*,XGCValues_seal), .font, XGCValues_font_Font_glue) \
 C_get_comp( proxy,(Pixmap,Pixmap_seal), proxy,(XGCValues*,XGCValues_seal), .stipple, XGCValues_stipple_Stipple_glue) \
 C_get_comp( proxy,(Pixmap,Pixmap_seal), proxy,(XGCValues*,XGCValues_seal), .tile, XGCValues_tile_Tile_glue) \
 C_set_comp( proxy,(XGCValues*,XGCValues_seal), .font, proxy,(Font,Font_seal), XGCValues_font_Font__glue) \
 C_set_comp( proxy,(XGCValues*,XGCValues_seal), .background, unsigned_long,, XGCValues_background_Background__glue) \
 C_set_comp( proxy,(XGCValues*,XGCValues_seal), .foreground, unsigned_long,, XGCValues_foreground_Foreground__glue) \
 C_set_comp( proxy,(XGCValues*,XGCValues_seal), .function, int,, XGCValues_function_Function__glue) \
 CC_new_0( proxy,(XColor*,XColor_seal), XColor, XColor_new_New_glue) \
 CC_delete( proxy,(XColor*,XColor_seal), XColor_delete_Delete_glue) \
 C_get_comp( int,, proxy,(XColor*,XColor_seal), .pixel, XColor_pixel_Pixel_glue) \
 C_get_comp( int,, proxy,(XColor*,XColor_seal), .red, XColor_red_Red_glue) \
 C_get_comp( int,, proxy,(XColor*,XColor_seal), .green, XColor_green_Green_glue) \
 C_get_comp( int,, proxy,(XColor*,XColor_seal), .blue, XColor_blue_Blue_glue) \
 C_get_comp( char,, proxy,(XColor*,XColor_seal), .flags, XColor_flags_Flags_glue) \
 C_set_comp( proxy,(XColor*,XColor_seal), .pixel, int,, XColor_pixel_Pixel__glue) \
 C_set_comp( proxy,(XColor*,XColor_seal), .red, int,, XColor_red_Red__glue) \
 C_set_comp( proxy,(XColor*,XColor_seal), .green, int,, XColor_green_Green__glue) \
 C_set_comp( proxy,(XColor*,XColor_seal), .blue, int,, XColor_blue_Blue__glue) \
 C_set_comp( proxy,(XColor*,XColor_seal), .flags, char,, XColor_flags_Flags__glue) \
 C_func_3( unsigned_long,, XGetPixel, XGetPixel_XGetPixelX_Y__glue, , proxy,(XImage*,XImage_seal), int,, int,) \
 C_func_4( void,, XPutPixel, XPutPixel_XPutPixelX_Y_Value__glue, , proxy,(XImage*,XImage_seal), int,, int,, unsigned_long,) \
 C_func_5( proxy,(XImage*,XImage_seal), XSubImage, XSubImage_XSubImageX_Y_Width_Height__glue, , proxy,(XImage*,XImage_seal), int,, int,, unsigned_int,, unsigned_int,) \
 C_func_3( void,, XImagePutData_wrap, XImagePutData_wrap_XImagePutData_MappedBy__glue, fail, proxy,(XImage*,XImage_seal), bv_len,char*, oop,objVector) \
 C_func_2( void,, XImageGetData_wrap, XImageGetData_wrap_XImageGetData__glue, , proxy,(XImage*,XImage_seal), bv_len,char*) \
 C_func_1( void,, XDestroyImage, XDestroyImage_XDestroyImage_glue, , proxy,(XImage*,XImage_seal)) \
 CC_new_0( proxy,(XEvent*,XEvent_seal), XEvent, XEvent_new_New_glue) \
 CC_delete( proxy,(XEvent*,XEvent_seal), XEvent_delete_BasicDelete_glue) \
 C_get_comp( int,, proxy,(XEvent*,XEvent_seal), .type, XEvent_type_Type_glue) \
 C_func_1( oop,, xButtonEvent_time, xButtonEvent_time_RawTime_glue, , proxy,(XButtonEvent*,XButtonEvent_seal)) \
 C_get_comp( int,, proxy,(XButtonEvent*,XButtonEvent_seal), .x, XButtonEvent_x_X_glue) \
 C_get_comp( int,, proxy,(XButtonEvent*,XButtonEvent_seal), .y, XButtonEvent_y_Y_glue) \
 C_get_comp( int,, proxy,(XButtonEvent*,XButtonEvent_seal), .x_root, XButtonEvent_x_root_X_root_glue) \
 C_get_comp( int,, proxy,(XButtonEvent*,XButtonEvent_seal), .y_root, XButtonEvent_y_root_Y_root_glue) \
 C_get_comp( unsigned_int,, proxy,(XButtonEvent*,XButtonEvent_seal), .state, XButtonEvent_state_State_glue) \
 C_get_comp( unsigned_int,, proxy,(XButtonEvent*,XButtonEvent_seal), .button, XButtonEvent_button_Button_glue) \
 C_get_comp( proxy,(Window,Window_seal), proxy,(XButtonEvent*,XButtonEvent_seal), .window, XButtonEvent_window_Window_glue) \
 CC_new_0( proxy,(XClientMessageEvent*,XClientMessageEvent_seal), XClientMessageEvent, XClientMessageEvent_new_New_glue) \
 C_set_comp( proxy,(XClientMessageEvent*,XClientMessageEvent_seal), .type, int,, XClientMessageEvent_type_Type__glue) \
 C_get_comp( unsigned_int,, proxy,(XClientMessageEvent*,XClientMessageEvent_seal), .serial, XClientMessageEvent_serial_Serial_glue) \
 C_set_comp( proxy,(XClientMessageEvent*,XClientMessageEvent_seal), .serial, unsigned_int,, XClientMessageEvent_serial_Serial__glue) \
 C_get_comp( bool,, proxy,(XClientMessageEvent*,XClientMessageEvent_seal), .send_event, XClientMessageEvent_send_event_SendEvent_glue) \
 C_set_comp( proxy,(XClientMessageEvent*,XClientMessageEvent_seal), .send_event, bool,, XClientMessageEvent_send_event_SendEvent__glue) \
 C_get_comp( proxy,(Display*,Display_seal), proxy,(XClientMessageEvent*,XClientMessageEvent_seal), .display, XClientMessageEvent_display_Display_glue) \
 C_set_comp( proxy,(XClientMessageEvent*,XClientMessageEvent_seal), .display, proxy,(Display*,Display_seal), XClientMessageEvent_display_Display__glue) \
 C_get_comp( proxy,(Window,Window_seal), proxy,(XClientMessageEvent*,XClientMessageEvent_seal), .window, XClientMessageEvent_window_Window_glue) \
 C_set_comp( proxy,(XClientMessageEvent*,XClientMessageEvent_seal), .window, proxy,(Window,Window_seal), XClientMessageEvent_window_Window__glue) \
 C_get_comp( proxy,(Atom,Atom_seal), proxy,(XClientMessageEvent*,XClientMessageEvent_seal), .message_type, XClientMessageEvent_message_type_Message_type_glue) \
 C_set_comp( proxy,(XClientMessageEvent*,XClientMessageEvent_seal), .message_type, proxy,(Atom,Atom_seal), XClientMessageEvent_message_type_Message_type__glue) \
 C_get_comp( int,, proxy,(XClientMessageEvent*,XClientMessageEvent_seal), .format, XClientMessageEvent_format_Format_glue) \
 C_set_comp( proxy,(XClientMessageEvent*,XClientMessageEvent_seal), .format, int,, XClientMessageEvent_format_Format__glue) \
 C_func_2( proxy,(Atom,Atom_seal), XClientMessageEvent_atomAt_wrap, XClientMessageEvent_atomAt_wrap_AtomAt__glue, fail, proxy,(XClientMessageEvent*,XClientMessageEvent_seal), unsigned_int,) \
 C_func_3( void,, XClientMessageEvent_at_Atom_wrap, XClientMessageEvent_at_Atom_wrap_At_Atom__glue, fail, proxy,(XClientMessageEvent*,XClientMessageEvent_seal), unsigned_int,, proxy,(Atom,Atom_seal)) \
 C_func_3( void,, XClientMessageEvent_at_Long_wrap, XClientMessageEvent_at_Long_wrap_At_Long__glue, fail, proxy,(XClientMessageEvent*,XClientMessageEvent_seal), unsigned_int,, long,) \
 CC_delete( proxy,(XClientMessageEvent*,XClientMessageEvent_seal), XClientMessageEvent_delete_BasicDelete_glue) \
 C_get_comp( bool,, proxy,(XColormapEvent*,XColormapEvent_seal), .c_new, XColormapEvent_c_new_C_new_glue) \
 C_get_comp( unsigned_int,, proxy,(XColormapEvent*,XColormapEvent_seal), .state, XColormapEvent_state_State_glue) \
 C_get_comp( proxy,(Window,Window_seal), proxy,(XColormapEvent*,XColormapEvent_seal), .window, XColormapEvent_window_Window_glue) \
 C_get_comp( int,, proxy,(XConfigureEvent*,XConfigureEvent_seal), .x, XConfigureEvent_x_X_glue) \
 C_get_comp( int,, proxy,(XConfigureEvent*,XConfigureEvent_seal), .y, XConfigureEvent_y_Y_glue) \
 C_get_comp( int,, proxy,(XConfigureEvent*,XConfigureEvent_seal), .width, XConfigureEvent_width_Width_glue) \
 C_get_comp( int,, proxy,(XConfigureEvent*,XConfigureEvent_seal), .height, XConfigureEvent_height_Height_glue) \
 C_get_comp( proxy,(Display*,Display_seal), proxy,(XConfigureEvent*,XConfigureEvent_seal), .display, XConfigureEvent_display_Display_glue) \
 C_get_comp( proxy,(Window,Window_seal), proxy,(XConfigureEvent*,XConfigureEvent_seal), .window, XConfigureEvent_window_Window_glue) \
 C_func_1( oop,, xCrossingEvent_time, xCrossingEvent_time_RawTime_glue, , proxy,(XCrossingEvent*,XCrossingEvent_seal)) \
 C_get_comp( proxy,(Window,Window_seal), proxy,(XCrossingEvent*,XCrossingEvent_seal), .window, XCrossingEvent_window_Window_glue) \
 C_get_comp( int,, proxy,(XCrossingEvent*,XCrossingEvent_seal), .x, XCrossingEvent_x_X_glue) \
 C_get_comp( int,, proxy,(XCrossingEvent*,XCrossingEvent_seal), .y, XCrossingEvent_y_Y_glue) \
 C_get_comp( int,, proxy,(XExposeEvent*,XExposeEvent_seal), .x, XExposeEvent_x_X_glue) \
 C_get_comp( int,, proxy,(XExposeEvent*,XExposeEvent_seal), .y, XExposeEvent_y_Y_glue) \
 C_get_comp( int,, proxy,(XExposeEvent*,XExposeEvent_seal), .width, XExposeEvent_width_Width_glue) \
 C_get_comp( int,, proxy,(XExposeEvent*,XExposeEvent_seal), .height, XExposeEvent_height_Height_glue) \
 C_get_comp( int,, proxy,(XExposeEvent*,XExposeEvent_seal), .count, XExposeEvent_count_Count_glue) \
 C_get_comp( proxy,(Window,Window_seal), proxy,(XExposeEvent*,XExposeEvent_seal), .window, XExposeEvent_window_Window_glue) \
 C_get_comp( unsigned_long,, proxy,(XFocusChangeEvent*,XFocusChangeEvent_seal), .serial, XFocusChangeEvent_serial_Serial_glue) \
 C_get_comp( proxy,(Display*,Display_seal), proxy,(XFocusChangeEvent*,XFocusChangeEvent_seal), .display, XFocusChangeEvent_display_Display_glue) \
 C_get_comp( proxy,(Window,Window_seal), proxy,(XFocusChangeEvent*,XFocusChangeEvent_seal), .window, XFocusChangeEvent_window_Window_glue) \
 C_get_comp( int,, proxy,(XFocusChangeEvent*,XFocusChangeEvent_seal), .mode, XFocusChangeEvent_mode_Mode_glue) \
 C_get_comp( int,, proxy,(XFocusChangeEvent*,XFocusChangeEvent_seal), .detail, XFocusChangeEvent_detail_Detail_glue) \
 C_get_comp( int,, proxy,(XGraphicsExposeEvent*,XGraphicsExposeEvent_seal), .x, XGraphicsExposeEvent_x_X_glue) \
 C_get_comp( int,, proxy,(XGraphicsExposeEvent*,XGraphicsExposeEvent_seal), .y, XGraphicsExposeEvent_y_Y_glue) \
 C_get_comp( int,, proxy,(XGraphicsExposeEvent*,XGraphicsExposeEvent_seal), .width, XGraphicsExposeEvent_width_Width_glue) \
 C_get_comp( int,, proxy,(XGraphicsExposeEvent*,XGraphicsExposeEvent_seal), .height, XGraphicsExposeEvent_height_Height_glue) \
 C_get_comp( int,, proxy,(XGraphicsExposeEvent*,XGraphicsExposeEvent_seal), .count, XGraphicsExposeEvent_count_Count_glue) \
 C_func_1( oop,, xKeyEvent_time, xKeyEvent_time_RawTime_glue, , proxy,(XKeyEvent*,XKeyEvent_seal)) \
 C_get_comp( int,, proxy,(XKeyEvent*,XKeyEvent_seal), .x, XKeyEvent_x_X_glue) \
 C_get_comp( int,, proxy,(XKeyEvent*,XKeyEvent_seal), .y, XKeyEvent_y_Y_glue) \
 C_get_comp( int,, proxy,(XKeyEvent*,XKeyEvent_seal), .x_root, XKeyEvent_x_root_X_root_glue) \
 C_get_comp( int,, proxy,(XKeyEvent*,XKeyEvent_seal), .y_root, XKeyEvent_y_root_Y_root_glue) \
 C_get_comp( unsigned_int,, proxy,(XKeyEvent*,XKeyEvent_seal), .state, XKeyEvent_state_State_glue) \
 C_get_comp( unsigned_int,, proxy,(XKeyEvent*,XKeyEvent_seal), .keycode, XKeyEvent_keycode_Keycode_glue) \
 C_get_comp( proxy,(Window,Window_seal), proxy,(XKeyEvent*,XKeyEvent_seal), .window, XKeyEvent_window_Window_glue) \
 C_func_3( int,, XLookupString_wrap, XLookupString_wrap_XLookupStringReturn_KeySymReturn__glue, , proxy,(XKeyEvent*,XKeyEvent_seal), bv_len,char*, oop,objVector) \
 C_get_comp( proxy,(Window,Window_seal), proxy,(XMapEvent*,XMapEvent_seal), .window, XMapEvent_window_Window_glue) \
 C_func_1( oop,, xMotionEvent_time, xMotionEvent_time_RawTime_glue, , proxy,(XMotionEvent*,XMotionEvent_seal)) \
 C_get_comp( int,, proxy,(XMotionEvent*,XMotionEvent_seal), .x, XMotionEvent_x_X_glue) \
 C_get_comp( int,, proxy,(XMotionEvent*,XMotionEvent_seal), .y, XMotionEvent_y_Y_glue) \
 C_get_comp( int,, proxy,(XMotionEvent*,XMotionEvent_seal), .x_root, XMotionEvent_x_root_X_root_glue) \
 C_get_comp( int,, proxy,(XMotionEvent*,XMotionEvent_seal), .y_root, XMotionEvent_y_root_Y_root_glue) \
 C_get_comp( unsigned_int,, proxy,(XMotionEvent*,XMotionEvent_seal), .state, XMotionEvent_state_State_glue) \
 C_get_comp( char,, proxy,(XMotionEvent*,XMotionEvent_seal), .is_hint, XMotionEvent_is_hint_Is_hint_glue) \
 C_get_comp( proxy,(Window,Window_seal), proxy,(XMotionEvent*,XMotionEvent_seal), .window, XMotionEvent_window_Window_glue) \
 C_get_comp( int,, proxy,(XReparentEvent*,XReparentEvent_seal), .x, XReparentEvent_x_X_glue) \
 C_get_comp( int,, proxy,(XReparentEvent*,XReparentEvent_seal), .y, XReparentEvent_y_Y_glue) \
 C_get_comp( proxy,(Window,Window_seal), proxy,(XReparentEvent*,XReparentEvent_seal), .window, XReparentEvent_window_Window_glue) \
 C_get_comp( proxy,(Window,Window_seal), proxy,(XReparentEvent*,XReparentEvent_seal), .parent, XReparentEvent_parent_Parent_window_glue) \
 C_get_comp( proxy,(Window,Window_seal), proxy,(XUnmapEvent*,XUnmapEvent_seal), .window, XUnmapEvent_window_Window_glue) \
 C_get_comp( unsigned_int,, proxy,(XVisibilityEvent*,XVisibilityEvent_seal), .state, XVisibilityEvent_state_State_glue) \
 C_get_comp( proxy,(Window,Window_seal), proxy,(XVisibilityEvent*,XVisibilityEvent_seal), .window, XVisibilityEvent_window_Window_glue) \
 C_func_0( proxy,(XSizeHints*,XSizeHints_seal), XAllocSizeHints, XAllocSizeHints_New_glue, ) \
 C_func_1( void,, XFree_XSizeHints_wrap, XFree_XSizeHints_wrap_Delete_glue, , proxy,(XSizeHints*,XSizeHints_seal)) \
 C_get_comp( long,, proxy,(XSizeHints*,XSizeHints_seal), .flags, XSizeHints_flags_Flags_glue) \
 C_get_comp( int,, proxy,(XSizeHints*,XSizeHints_seal), .min_width, XSizeHints_min_width_Min_width_glue) \
 C_get_comp( int,, proxy,(XSizeHints*,XSizeHints_seal), .min_height, XSizeHints_min_height_Min_height_glue) \
 C_get_comp( int,, proxy,(XSizeHints*,XSizeHints_seal), .max_width, XSizeHints_max_width_Max_width_glue) \
 C_get_comp( int,, proxy,(XSizeHints*,XSizeHints_seal), .max_height, XSizeHints_max_height_Max_height_glue) \
 C_get_comp( int,, proxy,(XSizeHints*,XSizeHints_seal), .x, XSizeHints_x_X_glue) \
 C_get_comp( int,, proxy,(XSizeHints*,XSizeHints_seal), .y, XSizeHints_y_Y_glue) \
 C_set_comp( proxy,(XSizeHints*,XSizeHints_seal), .flags, long,, XSizeHints_flags_Flags__glue) \
 C_set_comp( proxy,(XSizeHints*,XSizeHints_seal), .min_width, int,, XSizeHints_min_width_Min_width__glue) \
 C_set_comp( proxy,(XSizeHints*,XSizeHints_seal), .min_height, int,, XSizeHints_min_height_Min_height__glue) \
 C_set_comp( proxy,(XSizeHints*,XSizeHints_seal), .max_width, int,, XSizeHints_max_width_Max_width__glue) \
 C_set_comp( proxy,(XSizeHints*,XSizeHints_seal), .max_height, int,, XSizeHints_max_height_Max_height__glue) \
 C_set_comp( proxy,(XSizeHints*,XSizeHints_seal), .x, int,, XSizeHints_x_X__glue) \
 C_set_comp( proxy,(XSizeHints*,XSizeHints_seal), .y, int,, XSizeHints_y_Y__glue) \
 C_func_0( proxy,(XWMHints*,XWMHints_seal), XAllocWMHints, XAllocWMHints_New_glue, ) \
 C_func_1( void,, XFree_XWMHints_wrap, XFree_XWMHints_wrap_Delete_glue, , proxy,(XWMHints*,XWMHints_seal)) \
 C_get_comp( long,, proxy,(XWMHints*,XWMHints_seal), .flags, XWMHints_flags_Flags_glue) \
 C_get_comp( bool,, proxy,(XWMHints*,XWMHints_seal), .input, XWMHints_input_Input_glue) \
 C_get_comp( int,, proxy,(XWMHints*,XWMHints_seal), .initial_state, XWMHints_initial_state_Initial_state_glue) \
 C_get_comp( int,, proxy,(XWMHints*,XWMHints_seal), .icon_x, XWMHints_icon_x_Icon_x_glue) \
 C_get_comp( int,, proxy,(XWMHints*,XWMHints_seal), .icon_y, XWMHints_icon_y_Icon_y_glue) \
 C_get_comp( proxy,(Pixmap,Pixmap_seal), proxy,(XWMHints*,XWMHints_seal), .icon_pixmap, XWMHints_icon_pixmap_Icon_pixmap_glue) \
 C_get_comp( proxy,(Window,Window_seal), proxy,(XWMHints*,XWMHints_seal), .icon_window, XWMHints_icon_window_Icon_window_glue) \
 C_get_comp( proxy,(Pixmap,Pixmap_seal), proxy,(XWMHints*,XWMHints_seal), .icon_mask, XWMHints_icon_mask_Icon_mask_glue) \
 C_set_comp( proxy,(XWMHints*,XWMHints_seal), .flags, long,, XWMHints_flags_Flags__glue) \
 C_set_comp( proxy,(XWMHints*,XWMHints_seal), .input, bool,, XWMHints_input_Input__glue) \
 C_set_comp( proxy,(XWMHints*,XWMHints_seal), .initial_state, int,, XWMHints_initial_state_Initial_state__glue) \
 C_set_comp( proxy,(XWMHints*,XWMHints_seal), .icon_x, int,, XWMHints_icon_x_Icon_x__glue) \
 C_set_comp( proxy,(XWMHints*,XWMHints_seal), .icon_y, int,, XWMHints_icon_y_Icon_y__glue) \
 C_set_comp( proxy,(XWMHints*,XWMHints_seal), .icon_pixmap, proxy,(Pixmap,Pixmap_seal), XWMHints_icon_pixmap_Icon_pixmap__glue) \
 C_set_comp( proxy,(XWMHints*,XWMHints_seal), .icon_window, proxy,(Window,Window_seal), XWMHints_icon_window_Icon_window__glue) \
 C_set_comp( proxy,(XWMHints*,XWMHints_seal), .icon_mask, proxy,(Pixmap,Pixmap_seal), XWMHints_icon_mask_Icon_mask__glue) \
 CC_new_0( proxy,(XTextProperty*,XTextProperty_seal), XTextProperty, XTextProperty_new_New_glue) \
 C_func_1( void,, XFree, XFree_FreeValue__glue, , proxy,(char*,XTextProperty_value_seal)) \
 CC_delete( proxy,(XTextProperty*,XTextProperty_seal), XTextProperty_delete_BasicDelete_glue) \
 C_get_comp( proxy,(unsigned char*,XTextProperty_value_seal), proxy,(XTextProperty*,XTextProperty_seal), .value, XTextProperty_value_Value_glue) \
 C_func_2( int,, XStringToTextProperty_wrap, XStringToTextProperty_wrap_XStringToTextProperty__glue, , proxy,(XTextProperty*,XTextProperty_seal), string,) \
 CC_delete( proxy,(XWindowAttributes*,XWindowAttributes_seal), XWindowAttributes_delete_Delete_glue) \
 C_get_comp( int,, proxy,(XWindowAttributes*,XWindowAttributes_seal), .x, XWindowAttributes_x_X_glue) \
 C_get_comp( int,, proxy,(XWindowAttributes*,XWindowAttributes_seal), .y, XWindowAttributes_y_Y_glue) \
 C_get_comp( int,, proxy,(XWindowAttributes*,XWindowAttributes_seal), .width, XWindowAttributes_width_Width_glue) \
 C_get_comp( int,, proxy,(XWindowAttributes*,XWindowAttributes_seal), .height, XWindowAttributes_height_Height_glue) \
 C_get_comp( int,, proxy,(XWindowAttributes*,XWindowAttributes_seal), .border_width, XWindowAttributes_border_width_Border_width_glue) \
 C_get_comp( int,, proxy,(XWindowAttributes*,XWindowAttributes_seal), .depth, XWindowAttributes_depth_Depth_glue) \
 C_get_comp( proxy,(Visual*,Visual_seal), proxy,(XWindowAttributes*,XWindowAttributes_seal), .visual, XWindowAttributes_visual_Visual_glue) \
 C_get_comp( proxy,(Window,Window_seal), proxy,(XWindowAttributes*,XWindowAttributes_seal), .root, XWindowAttributes_root_Root_glue) \
 C_get_comp( int,, proxy,(XWindowAttributes*,XWindowAttributes_seal), .c_class, XWindowAttributes_c_class_Class_glue) \
 C_get_comp( int,, proxy,(XWindowAttributes*,XWindowAttributes_seal), .bit_gravity, XWindowAttributes_bit_gravity_Bit_gravity_glue) \
 C_get_comp( int,, proxy,(XWindowAttributes*,XWindowAttributes_seal), .win_gravity, XWindowAttributes_win_gravity_Win_gravity_glue) \
 C_get_comp( int,, proxy,(XWindowAttributes*,XWindowAttributes_seal), .backing_store, XWindowAttributes_backing_store_Backing_store_glue) \
 C_get_comp( unsigned_long,, proxy,(XWindowAttributes*,XWindowAttributes_seal), .backing_planes, XWindowAttributes_backing_planes_Backing_planes_glue) \
 C_get_comp( unsigned_long,, proxy,(XWindowAttributes*,XWindowAttributes_seal), .backing_pixel, XWindowAttributes_backing_pixel_Backing_pixel_glue) \
 C_get_comp( bool,, proxy,(XWindowAttributes*,XWindowAttributes_seal), .save_under, XWindowAttributes_save_under_Save_under_glue) \
 C_get_comp( proxy,(Colormap,Colormap_seal), proxy,(XWindowAttributes*,XWindowAttributes_seal), .colormap, XWindowAttributes_colormap_Colormap_glue) \
 C_get_comp( bool,, proxy,(XWindowAttributes*,XWindowAttributes_seal), .map_installed, XWindowAttributes_map_installed_Map_installed_glue) \
 C_get_comp( int,, proxy,(XWindowAttributes*,XWindowAttributes_seal), .map_state, XWindowAttributes_map_state_Map_state_glue) \
 C_get_comp( long,, proxy,(XWindowAttributes*,XWindowAttributes_seal), .all_event_masks, XWindowAttributes_all_event_masks_All_event_masks_glue) \
 C_get_comp( long,, proxy,(XWindowAttributes*,XWindowAttributes_seal), .your_event_mask, XWindowAttributes_your_event_mask_Your_event_mask_glue) \
 C_get_comp( long,, proxy,(XWindowAttributes*,XWindowAttributes_seal), .do_not_propagate_mask, XWindowAttributes_do_not_propagate_mask_Do_not_propagate_mask_glue) \
 C_get_comp( bool,, proxy,(XWindowAttributes*,XWindowAttributes_seal), .override_redirect, XWindowAttributes_override_redirect_Override_redirect_glue) \
 C_get_comp( proxy,(Screen*,Screen_seal), proxy,(XWindowAttributes*,XWindowAttributes_seal), .screen, XWindowAttributes_screen_Screen_glue) \
 CC_new_0( proxy,(XSetWindowAttributesWrap*,XSetWindowAttributesWrap_seal), XSetWindowAttributesWrap, XSetWindowAttributesWrap_new_New_glue) \
 CC_delete( proxy,(XSetWindowAttributesWrap*,XSetWindowAttributesWrap_seal), XSetWindowAttributesWrap_delete_Delete_glue) \
 CC_mber_1( void,, proxy,(XSetWindowAttributesWrap*,XSetWindowAttributesWrap_seal), backgroundPixmap, XSetWindowAttributesWrap_backgroundPixmap_BackgroundPixmap__glue, , proxy,(Pixmap,Pixmap_seal)) \
 CC_mber_1( void,, proxy,(XSetWindowAttributesWrap*,XSetWindowAttributesWrap_seal), backgroundPixel, XSetWindowAttributesWrap_backgroundPixel_BackgroundPixel__glue, , unsigned_long,) \
 CC_mber_1( void,, proxy,(XSetWindowAttributesWrap*,XSetWindowAttributesWrap_seal), borderPixmap, XSetWindowAttributesWrap_borderPixmap_BorderPixmap__glue, , proxy,(Pixmap,Pixmap_seal)) \
 CC_mber_1( void,, proxy,(XSetWindowAttributesWrap*,XSetWindowAttributesWrap_seal), borderPixel, XSetWindowAttributesWrap_borderPixel_BorderPixel__glue, , unsigned_long,) \
 CC_mber_1( void,, proxy,(XSetWindowAttributesWrap*,XSetWindowAttributesWrap_seal), bitGravity, XSetWindowAttributesWrap_bitGravity_BitGravity__glue, , int,) \
 CC_mber_1( void,, proxy,(XSetWindowAttributesWrap*,XSetWindowAttributesWrap_seal), winGravity, XSetWindowAttributesWrap_winGravity_WinGravity__glue, , int,) \
 CC_mber_1( void,, proxy,(XSetWindowAttributesWrap*,XSetWindowAttributesWrap_seal), backingStore, XSetWindowAttributesWrap_backingStore_BackingStore__glue, , int,) \
 CC_mber_1( void,, proxy,(XSetWindowAttributesWrap*,XSetWindowAttributesWrap_seal), backingPlanes, XSetWindowAttributesWrap_backingPlanes_BackingPlanes__glue, , unsigned_long,) \
 CC_mber_1( void,, proxy,(XSetWindowAttributesWrap*,XSetWindowAttributesWrap_seal), backingPixel, XSetWindowAttributesWrap_backingPixel_BackingPixel__glue, , unsigned_long,) \
 CC_mber_1( void,, proxy,(XSetWindowAttributesWrap*,XSetWindowAttributesWrap_seal), saveUnder, XSetWindowAttributesWrap_saveUnder_SaveUnder__glue, , bool,) \
 CC_mber_1( void,, proxy,(XSetWindowAttributesWrap*,XSetWindowAttributesWrap_seal), eventMask, XSetWindowAttributesWrap_eventMask_EventMask__glue, , long,) \
 CC_mber_1( void,, proxy,(XSetWindowAttributesWrap*,XSetWindowAttributesWrap_seal), doNotPropagateMask, XSetWindowAttributesWrap_doNotPropagateMask_DoNotPropagateMask__glue, , long,) \
 CC_mber_1( void,, proxy,(XSetWindowAttributesWrap*,XSetWindowAttributesWrap_seal), overrideRedirect, XSetWindowAttributesWrap_overrideRedirect_OverrideRedirect__glue, , bool,) \
 CC_mber_1( void,, proxy,(XSetWindowAttributesWrap*,XSetWindowAttributesWrap_seal), colormap, XSetWindowAttributesWrap_colormap_Colormap__glue, , proxy,(Colormap,Colormap_seal)) \
 CC_mber_1( void,, proxy,(XSetWindowAttributesWrap*,XSetWindowAttributesWrap_seal), cursor, XSetWindowAttributesWrap_cursor_Cursor__glue, , proxy,(Cursor,Cursor_seal)) \

# undef PRIMITIVE_GLUE_FLAG_CODE
# define PRIMITIVE_GLUE_FLAG_CODE


